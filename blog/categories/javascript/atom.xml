<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: javascript | 葱丝瓣酱]]></title>
  <link href="http://xiaocong.github.com/blog/categories/javascript/atom.xml" rel="self"/>
  <link href="http://xiaocong.github.com/"/>
  <updated>2012-08-13T12:54:54+08:00</updated>
  <id>http://xiaocong.github.com/</id>
  <author>
    <name><![CDATA[Xiaocong He]]></name>
    <email><![CDATA[xiaocong@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Requirejs/Backbone/Jasmine前端项目和持续继承]]></title>
    <link href="http://xiaocong.github.com/blog/2012/07/20/integrate-requirejs-slash-backbone-slash-jasmine-front-end-project-with-ci-using-bbb-slash-gruntjs/"/>
    <updated>2012-07-20T11:03:00+08:00</updated>
    <id>http://xiaocong.github.com/blog/2012/07/20/integrate-requirejs-slash-backbone-slash-jasmine-front-end-project-with-ci-using-bbb-slash-gruntjs</id>
    <content type="html"><![CDATA[<p><a href="http://xiaocong.github.com/examples/coffee-bbb-amd-backbone-rest-contacts/dist/release/">Contact</a>(<a href="https://github.com/xiaocong/xiaocong.github.com/tree/master/examples/coffee-bbb-amd-backbone-rest-contacts">源代码</a>)示例项目使用了<a href="https://github.com/backbone-boilerplate/grunt-bbb">bbb</a>作为项目构建工具,
作为<a href="https://github.com/cowboy/grunt">gruntjs</a>的扩展, <a href="https://github.com/backbone-boilerplate/grunt-bbb">bbb</a>能很方便地完成:</p>

<ul>
<li>Coffeescript的编译</li>
<li>文件的清除和复制</li>
<li>源代码lint</li>
<li>编译LESS</li>
<li>优化requirejs模块</li>
<li>js/css文件的合并和优化</li>
<li>文件的压缩, 打包</li>
<li>内置调试http服务器</li>
</ul>


<p>并且项目中还使用<a href="https://github.com/backbone-boilerplate/grunt-bbb">bbb</a>进行<a href="http://pivotal.github.com/jasmine/">jasmine</a>单元测试代码的编译. 所有的操作都可以通过定义<a href="https://github.com/backbone-boilerplate/grunt-bbb">bbb</a>任务并以命令行方式进行运行, 唯一的一个例外是<a href="http://pivotal.github.com/jasmine/">jasmine</a>测试执行需要启动浏览器执行.
如果要在项目中实施持续集成, 就必须不能依赖浏览器而以命令行方式执行测试.</p>

<p>曾经尝试过<a href="http://www.envjs.com/">envjs</a>, 但在当前的实现中, <a href="http://www.envjs.com/">envjs</a>还不能顺利运行<a href="http://requirejs.org/">requirejs</a>的异步模块加载(<a href="https://github.com/envjs/env-js/issues/7">issue</a>).
<a href="http://phantomjs.org/">Phantomjs</a>是另外一种方案, 它可以很顺利地集成<a href="http://pivotal.github.com/jasmine/">jasmine</a>以及<a href="http://requirejs.org/">requirejs</a>, 但是如果需要集成得很好, 必须得实现一个<a href="http://pivotal.github.com/jasmine/">jasmine</a>的<code>reporter</code>用来和<a href="http://phantomjs.org/">Phantomjs</a>进行通讯,
并且还得实现一个<a href="https://github.com/cowboy/grunt">gruntjs</a>任务插件, 用来调用<a href="http://phantomjs.org/">Phantomjs</a>执行测试, 以及生成测试报告. 这个工作量不大, 我也曾经完成了一个最简单的<a href="https://github.com/cowboy/grunt">gruntjs</a>任务来调用<a href="http://phantomjs.org/">Phantomjs</a>. 正在想着怎样进行重构的时候,
突然发现最新的<a href="https://github.com/backbone-boilerplate/grunt-bbb">bbb</a>已经悄然导入了<a href="https://github.com/creynders/grunt-jasmine-task">grunt-jasmine-task</a>, 一个利用<a href="http://phantomjs.org/">Phantomjs</a>执行<a href="http://pivotal.github.com/jasmine/">jasmine</a>测试的<a href="https://github.com/cowboy/grunt">gruntjs</a>任务插件.</p>

<p>Ok, 那一切就简单了. 现在仅仅需要修改<code>grunt.js</code>配置文件来定义项目的<code>jasmine</code>任务. 当然, 之前必须安装<a href="http://phantomjs.org/">Phantomjs</a>(<a href="https://github.com/cowboy/grunt">gruntjs</a>网站上有关于如何安装的<a href="https://github.com/cowboy/grunt/blob/master/docs/faq.md#why-does-grunt-complain-that-phantomjs-isnt-installed">faq</a>).
``` javascript
  grunt.initConfig({</p>

<pre><code>// jasmine task is to run specs using phantom, before running it, you must
// make sure you have installed phantom following instruction on
// https://github.com/cowboy/grunt/blob/master/docs/faq.md#why-does-grunt-complain-that-phantomjs-isnt-installed
jasmine: {
  all: {
    src:['http://localhost:8000/tests/SpecRunner.html'],
    timeout: 300000 //in milliseconds
  }
}
</code></pre>

<p>  });</p>

<p><code>
启动`http`服务:
</code> bash
$ ./node_modules/bbb/bin/bbb server
Running "server" task
Listening on http://127.0.0.1:8000</p>

<p><code>
然后在另一个终端运行`jasmine`任务:
</code> bash
$ ./node_modules/bbb/bin/bbb jasmine
Running "jasmine:all" (jasmine) task
Running specs for SpecRunner.html
.............</p>

<blockquote><blockquote><p>31 assertions passed in 13 specs (1451ms)</p></blockquote></blockquote>

<p>Done, without errors.</p>

<p>```</p>

<p>在CI系统中, 一种可行的做法是使用<code>shell</code>脚本或者<code>Makefile</code>, 先启动<code>http</code>服务, 然后异步执行测试. 这是一个可行的方案, 但是<code>grunt.js</code>本身就是一个命令行工具, 为什么还要用<code>shell</code>或者<code>make</code>了?</p>

<p><code>grunt.js</code>支持<code>alias task</code>, 我们可以这样定义一个任务别名:
<code>javascript
grunt.registerTask('test', 'default server jasmine');
</code>
执行<code>test</code>任务等价于按照顺序执行<code>default</code>, <code>server</code>, <code>jasmine</code>任务. 我们希望这样能工作, 可惜的是, <code>bbb</code>的<code>server</code>任务是阻塞式的, 不会退出,
也就是说, 在它后面的<code>jasmine</code>任务永远不会被执行.</p>

<p>我们希望执行一个<code>server</code>任务, 它能异步启动一个非阻塞的<code>http</code>服务, 后面的任务可以使用这个服务, 并且当<code>grunt</code>进程退出的时候, 该<code>http</code>服务能自动退出.
下面代码是用<code>node</code>的<code>connect</code>实现的满足这个要求的<code>staticserver</code>任务:
``` javascript staticserver.js
/<em>
 * grunt
 * https://github.com/cowboy/grunt
 *
 * Copyright (c) 2012 "Cowboy" Ben Alman
 * Licensed under the MIT license.
 * http://benalman.com/about/license/
 </em>/</p>

<p>module.exports = function(grunt) {</p>

<p>  // Nodejs libs.
  var path = require('path');</p>

<p>  // External libs.
  var connect = require('connect');</p>

<p>  // ==========================================================================
  // TASKS
  // ==========================================================================</p>

<p>  grunt.registerTask('staticserver', 'Start a static web server.', function() {</p>

<pre><code>// Get values from config, or use defaults.
var port = grunt.config('server.port') || 8000;
var base = path.resolve(grunt.config('server.base') || '.');

var middleware = [
  // Serve static files.
  connect.static(base),
  // Make empty directories browsable. (overkill?)
  connect.directory(base)
];

// If --debug was specified, enable logging.
if (grunt.option('debug')) {
  connect.logger.format('grunt', ('[D] server :method :url :status ' +
    ':res[content-length] - :response-time ms').magenta);
  middleware.unshift(connect.logger('grunt'));
}

// Start server.
grunt.log.writeln('Starting static web server on port ' + port + '.');
connect.apply(null, middleware).listen(port);
</code></pre>

<p>  });</p>

<p>};</p>

<p><code>``
假如你看过[gruntjs][]的代码, 你应当能看出来, 这其实就是[gruntjs][]自带的</code>server<code>任务, 只是为了避免和</code>bbb<code>的</code>server<code>任务命名冲突, 这里将任务注册的名称从</code>server<code>换成了</code>staticserver`.</p>

<p>将<code>staticserver.js</code>文件和其他<code>gruntjs</code> <code>task</code>文件一样存放在<code>&lt;工程目录&gt;/tasks</code>目录下, 确保这个任务能正确加载. 然后, 如下注册一个<code>alias task</code>命名为<code>test</code>:
``` javascript
  // Register test task, which will compile app and run the server and then do test.
  // Here we use 'staticserver' task (pure grunt static server) for testing.
  grunt.registerTask('test', 'default staticserver jasmine');</p>

<p><code>
运行这个`test`任务就能到下面的输出:
</code>
$ ./node_modules/bbb/bin/bbb test
Running "clean:0" (clean) task
Removing: app
Removing: dist/debug
Removing: dist/release
Removing: tests/js</p>

<p>Running "clean:1" (clean) task
Removing: app
Removing: dist/debug
Removing: dist/release
Removing: tests/js</p>

<p>Running "clean:2" (clean) task
Removing: app
Removing: dist/debug
Removing: dist/release
Removing: tests/js</p>

<p>Running "clean:3" (clean) task
Removing: app
Removing: dist/debug
Removing: dist/release
Removing: tests/js</p>

<p>Running "coffee:app" (coffee) task</p>

<p>Running "lint:beforeconcat" (lint) task
Lint free.</p>

<p>Running "coffee:spec" (coffee) task</p>

<p>Running "staticserver" task
Starting static web server on port 8000.</p>

<p>Running "jasmine:all" (jasmine) task
Running specs for SpecRunner.html
.............</p>

<blockquote><blockquote><p>31 assertions passed in 13 specs (2256ms)</p></blockquote></blockquote>

<p>Done, without errors.</p>

<p>```</p>

<h2>参考</h2>

<ul>
<li><a href="https://github.com/xiaocong/xiaocong.github.com/tree/master/examples/coffee-bbb-amd-backbone-rest-contacts">示例程序源代码</a></li>
<li><a href="https://github.com/backbone-boilerplate/grunt-bbb">bbb</a></li>
<li><a href="https://github.com/cowboy/grunt">gruntjs</a></li>
<li><a href="http://phantomjs.org/">Phantomjs</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用jasmine+sinon测试backbone+requirejs项目]]></title>
    <link href="http://xiaocong.github.com/blog/2012/07/06/testing-backbone-and-requirejs-with-jasmine/"/>
    <updated>2012-07-06T00:32:00+08:00</updated>
    <id>http://xiaocong.github.com/blog/2012/07/06/testing-backbone-and-requirejs-with-jasmine</id>
    <content type="html"><![CDATA[<p>我们必须为自己的代码写自动测试代码, 并且需要持续地对自己的代码进行回归测试, 因为:</p>

<ul>
<li>项目成员对模块间接口的理解必须一致, 测试代码是最好的文档.</li>
<li>谁都没十足的把握保证自己的修改不影响别人的代码.</li>
<li>没有快速而充分的测试作为保障, 就很难提倡快速重构.</li>
<li>让代码成为资产, 而不是债务, 减少代码的维护成本.</li>
<li>每个人都必须为自己的代码负责.</li>
</ul>


<p>那么基于<a href="http://backbonejs.com/" title="Backbone.js">backbone</a>+<a href="http://requirejs.org/" title="Require.js">requirejs</a>的前端项目应当如何实施测试?</p>

<p>当前已经有很多非常优秀的javascript测试框架, 包括<a href="http://pivotal.github.com/jasmine/">jasmine</a>,
<a href="http://docs.jquery.com/QUnit">QUnit</a>, <a href="http://visionmedia.github.com/mocha/">mocha</a>.
<a href="http://backbonejs.com/" title="Backbone.js">backbone</a>和<a href="http://requirejs.org/" title="Require.js">requirejs</a>的前端项目可以使用上述任何一种测试框架. 技术经理可以根据团队成员的技术背景, 喜好来决定选择哪一种测试框架.</p>

<p>下面就以<a href="/examples/coffee-bbb-amd-backbone-rest-contacts/index.html">Contacts</a>应用为例,
简单demo如何在项目中实现基于<a href="http://pivotal.github.com/jasmine/">jasmine</a>+<a href="http://sinonjs.org/" title="sinon.js">sinon</a>的测试用例.</p>

<ul>
<li><a href="https://github.com/xiaocong/xiaocong.github.com/tree/master/examples/coffee-bbb-amd-backbone-rest-contacts">源码</a></li>
<li><a href="/examples/coffee-bbb-amd-backbone-rest-contacts/tests/SpecRunner.html">测试执行demo</a></li>
</ul>


<h2>工程的目录结构</h2>

<p>``` bash
|-coffee                # web应用coffeescript源代码
|-app                   # coffee编译之后的web应用js文件
|-dist
   |-debug              # concat所有js文件到一个js文件, 但未作minize
   |-release            # concat所有js文件到一个js文件, 并且minize
|-assets                # jquery/requirejs/underscore/backbone等库文件
|-tests
   |-coffee             # 测试程序的coffeescript源代码</p>

<pre><code>  |-config.coffee   # requirejs配置文件
  |-runner.coffee   # 按照requirejs模块定义规范定义的jasmine测试执行模块
</code></pre>

<p>   |-js                 # coffee编译之后的测试程序js文件
   |-lib                # jasmine/sinon等测试用库文件
   |-SpecRunner.html    # 测试html文件, 用来执行broqser端测试代码
|-index.html            # app html文件
|-favicon.ico
|-grunt.js              # grunt任务配置文件
```</p>

<h2>按照<a href="http://requirejs.org/" title="Require.js">requirejs</a>的模块定义方式定义<em>测试模块</em></h2>

<p>由于<em>被测模块</em>是由<a href="http://requirejs.org/" title="Require.js">requirejs</a>进行加载的, 因此, 我们也可以遵循<a href="http://requirejs.org/" title="Require.js">requirejs</a>的模块定义方式定义<em>测试模块</em>, 确保<em>被测模块</em>在<em>测试模块</em>前加载完成:
``` coffeescript model_spec.coffee
define [use!underscore', 'use!backbone', 'model/under/test'], (_, Backbone, model) ->
  describe "suite description...", -></p>

<pre><code>it "spec description...", -&gt;
  # test code here ...
</code></pre>

<p><code>``
下面是测试用例的代码(</code>collection<code>,</code>model<code>,</code>view`各实现了一个模块的测试, 仅供demo):</p>

<ul>
<li><a href="/examples/coffee-bbb-amd-backbone-rest-contacts/tests/coffee/spec/collections/contacts.coffee">Collection测试Dmeo</a></li>
<li><a href="/examples/coffee-bbb-amd-backbone-rest-contacts/tests/coffee/spec/models/contact.coffee">Model测试Demo</a></li>
<li><a href="/examples/coffee-bbb-amd-backbone-rest-contacts/tests/coffee/spec/views/contactitem.coffee">View测试Demo</a></li>
</ul>


<h2>加载<em>测试模块</em>, 定义测试<code>runner</code></h2>

<p>通过定义模块依赖, 确保在执行<code>runner</code>方法前加载所有的<em>测试模块</em>.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>SpecRunner  (runner.coffee)</span> <a href='/examples/coffee-bbb-amd-backbone-rest-contacts/tests/coffee/runner.coffee'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='coffeescript'><span class='line'><span class="c1"># we should add all specs here to make sure all specs are loaded before execution.</span>
</span><span class='line'><span class="nx">define</span> <span class="p">[</span><span class="s2">&quot;spec/models/contact&quot;</span>
</span><span class='line'>        <span class="s2">&quot;spec/collections/contacts&quot;</span>
</span><span class='line'>        <span class="s2">&quot;spec/views/contactitem&quot;</span><span class="p">],</span> <span class="o">-&gt;</span>
</span><span class='line'>  <span class="nv">runner = </span><span class="o">-&gt;</span>
</span><span class='line'>    <span class="nv">jasmineEnv = </span><span class="nx">jasmine</span><span class="p">.</span><span class="nx">getEnv</span><span class="p">()</span>
</span><span class='line'>    <span class="nv">jasmineEnv.updateInterval = </span><span class="mi">1000</span>
</span><span class='line'>    <span class="nv">trivialReporter = </span><span class="k">new</span> <span class="nx">jasmine</span><span class="p">.</span><span class="nx">TrivialReporter</span><span class="p">()</span>
</span><span class='line'>    <span class="nx">jasmineEnv</span><span class="p">.</span><span class="nx">addReporter</span> <span class="nx">trivialReporter</span>
</span><span class='line'>    <span class="nv">jasmineEnv.specFilter = </span><span class="nf">(spec) -&gt;</span>
</span><span class='line'>      <span class="nx">trivialReporter</span><span class="p">.</span><span class="nx">specFilter</span> <span class="nx">spec</span>
</span><span class='line'>    <span class="nx">jasmineEnv</span><span class="p">.</span><span class="nx">execute</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>定义<a href="http://requirejs.org/" title="Require.js">requirejs</a>的配置文件, 执行测试<code>runner</code></h2>

<p>由于我们希望通过一个配置文件同时加载<em>被测模块</em>和<em>测试模块</em>, 因此这里<code>require.config</code>的<code>baseUrl</code>项必须与web应用的该值保持一致.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>require.config  (config.coffee)</span> <a href='/examples/coffee-bbb-amd-backbone-rest-contacts/tests/coffee/config.coffee'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='coffeescript'><span class='line'><span class="nx">require</span><span class="p">.</span><span class="nx">config</span>
</span><span class='line'>  <span class="nv">baseUrl: </span><span class="s2">&quot;../app&quot;</span>
</span><span class='line'>  <span class="nv">paths:</span>
</span><span class='line'>    <span class="nv">libs: </span><span class="s2">&quot;../assets/js&quot;</span>
</span><span class='line'>    <span class="nv">jquery: </span><span class="s1">&#39;../assets/js/jquery/1.7.2/jquery&#39;</span>
</span><span class='line'>    <span class="nv">underscore: </span><span class="s1">&#39;../assets/js/underscore/1.3.2/underscore&#39;</span>
</span><span class='line'>    <span class="nv">backbone: </span><span class="s1">&#39;../assets/js/backbone/0.9.2/backbone&#39;</span>
</span><span class='line'>    <span class="nv">text: </span><span class="s1">&#39;../assets/js/require/plugins/text&#39;</span>
</span><span class='line'>    <span class="nv">use: </span><span class="s1">&#39;../assets/js/require/plugins/use&#39;</span>
</span><span class='line'>    <span class="nv">templates: </span><span class="s1">&#39;../assets/templates&#39;</span>
</span><span class='line'>    <span class="nv">spec: </span><span class="s2">&quot;../tests/js/spec&quot;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nv">use:</span>
</span><span class='line'>    <span class="nv">backbone:</span>
</span><span class='line'>      <span class="nv">deps: </span><span class="p">[</span><span class="s2">&quot;use!underscore&quot;</span><span class="p">,</span> <span class="s2">&quot;jquery&quot;</span><span class="p">]</span>
</span><span class='line'>      <span class="nv">attach: </span><span class="s2">&quot;Backbone&quot;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nv">underscore:</span>
</span><span class='line'>      <span class="nv">attach: </span><span class="s2">&quot;_&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="nx">require</span> <span class="p">[</span><span class="s2">&quot;../tests/js/runner&quot;</span><span class="p">],</span> <span class="nf">(runner) -&gt;</span>
</span><span class='line'>  <span class="nx">runner</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>定义<code>SpecRunner.html</code>, 用来在浏览器端执行策测试代码</h2>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>SpecRunner.html  (SpecRunner.html)</span> <a href='/examples/coffee-bbb-amd-backbone-rest-contacts/tests/SpecRunner.html'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='coffeescript'><span class='line'><span class="o">&lt;!</span><span class="nx">DOCTYPE</span> <span class="nx">HTML</span> <span class="nx">PUBLIC</span> <span class="s2">&quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;</span>
</span><span class='line'>  <span class="s2">&quot;http://www.w3.org/TR/html4/loose.dtd&quot;</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="nx">html</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="nx">head</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="nx">title</span><span class="o">&gt;</span><span class="nx">Jasmine</span> <span class="nx">Spec</span> <span class="nx">Runner</span><span class="o">&lt;</span><span class="err">/title&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">&lt;</span><span class="nx">link</span> <span class="nx">rel</span><span class="o">=</span><span class="s2">&quot;stylesheet&quot;</span> <span class="nx">type</span><span class="o">=</span><span class="s2">&quot;text/css&quot;</span> <span class="nx">href</span><span class="o">=</span><span class="s2">&quot;lib/jasmine.css&quot;</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">&lt;</span><span class="nx">script</span> <span class="nx">type</span><span class="o">=</span><span class="s2">&quot;text/javascript&quot;</span> <span class="nx">src</span><span class="o">=</span><span class="s2">&quot;lib/jasmine.js&quot;</span><span class="o">&gt;&lt;</span><span class="err">/script&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="nx">script</span> <span class="nx">type</span><span class="o">=</span><span class="s2">&quot;text/javascript&quot;</span> <span class="nx">src</span><span class="o">=</span><span class="s2">&quot;lib/jasmine-html.js&quot;</span><span class="o">&gt;&lt;</span><span class="err">/script&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="nx">script</span> <span class="nx">type</span><span class="o">=</span><span class="s2">&quot;text/javascript&quot;</span> <span class="nx">src</span><span class="o">=</span><span class="s2">&quot;lib/sinon.js&quot;</span><span class="o">&gt;&lt;</span><span class="err">/script&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="nx">script</span> <span class="nx">data</span><span class="o">-</span><span class="nx">main</span><span class="o">=</span><span class="s2">&quot;js/config&quot;</span> <span class="nx">type</span><span class="o">=</span><span class="s2">&quot;text/javascript&quot;</span> <span class="nx">src</span><span class="o">=</span><span class="s2">&quot;../assets/js/require/require.js&quot;</span><span class="o">&gt;&lt;</span><span class="err">/script&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/head&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">body</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/body&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/html&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>下面是<a href="/examples/coffee-bbb-amd-backbone-rest-contacts/tests/SpecRunner.html">测试执行</a>的结果:</p>

<iframe src="http://xiaocong.github.com/examples/coffee-bbb-amd-backbone-rest-contacts/tests/SpecRunner.html" width="100%" scrolling="no"></iframe>


<h2>遗留问题</h2>

<ul>
<li>由于<em>被测模块</em>的加载是由<a href="http://requirejs.org/" title="Require.js">requirejs</a>完成的, 那么如何在加载时mock<em>被测模块</em>的依赖模块?</li>
<li>如何和CI系统集成, 提供命令行方式的浏览器环境进行测试? 尝试过<a href="http://www.envjs.com/">envjs</a>, 但<a href="http://requirejs.org/" title="Require.js">requirejs</a>总在加载模块时出错, 还没能进一步研究出错细节.</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Backbone.sync和资源的CRUD]]></title>
    <link href="http://xiaocong.github.com/blog/2012/06/26/backbone-dot-sync-and-crud/"/>
    <updated>2012-06-26T01:33:00+08:00</updated>
    <id>http://xiaocong.github.com/blog/2012/06/26/backbone-dot-sync-and-crud</id>
    <content type="html"><![CDATA[<p><blockquote><p>Backbone.sync是Backbone用来和服务器进行数据交换的方法. 每当Collection或者Model的数据发生变化, Backbone就会调用Backbone.sync进行数据的CRUD操作, 这个同步方法的缺省实现是使用(jQuery/Zepto).ajax向服务器发送RESTful JSON请求, 并返回一个jqXHR. 你可以通过重载这个方法来定义不同的持续化策略, 例如WebSocket, XML, 或者本地存储.</p><footer><strong>Backbone</strong> <cite><a href='http://documentcloud.github.com/backbone/#Sync'>Backbone.sync</a></cite></footer></blockquote></p>

<p>Backbone.sync的函数定义是<code>function(method, model, [options])</code>:</p>

<ul>
<li><strong>medhod</strong>: CRUD名称, 可以是<code>create</code>, <code>read</code>, <code>update</code>, <code>delete</code>.</li>
<li><strong>model</strong>: 需要保存的model, 可以是Backbone.Model或者Backbone.Collection.</li>
<li><strong>options</strong>: 所有jQuery请求选项, 包括success和error回掉函数.</li>
</ul>


<p>Backbone.sync方法的缺省实现是通过标准的RESTful风格的CRUD进行数据的操作. CRUD方法对应的REST接口分别是:</p>

<ul>
<li><strong>create</strong> -> <strong>POST</strong> <code>/collection</code></li>
<li><strong>read</strong> -> <strong>GET</strong> <code>/collection[/id]</code></li>
<li><strong>update</strong> -> <strong>PUT</strong> <code>/collection/id</code></li>
<li><strong>create</strong> -> <strong>DELETE</strong> <code>/collection/id</code></li>
</ul>


<p>你可以通过重载全局的Backbone.sync, 或者Collection/Model的sync方法来改变其缺省实现.</p>

<h2>localStorage方式实现Backbone.sync</h2>

<p>在<a href="http://xiaocong.github.com/examples/coffee-bbb-amd-backbone-contacts/index.html">地址本示例</a>中, 通过重载全局的Backbone.sync方法,
将Collection/Model的CRUD操作转化为localStorage的对象CRUD操作.</p>

<p>下面是Backbone.sync方法的定义(<a href="http://xiaocong.github.com/examples/coffee-bbb-amd-backbone-contacts/coffee/store.coffee">源码</a>),
首先获得传递进来的model对象或其集合对象的localStorage属性对象, 并将CRUD操作转化为localStorage属性对象的数据CRUD操作:
``` coffeescript
  Backbone.sync = (method, model, options) -></p>

<pre><code>store = model.localStorage or model.collection.localStorage

switch method
  when "read"
    resp = if model.id then store.find(model) else store.findAll()
  when "create"
    resp = store.create(model)
  when "update"
    resp = store.update(model)
  when "delete"
    resp = store.destroy(model)

if resp
  options.success resp
else
  options.error "Record not found"
</code></pre>

<p><code>
localStorage属性对象的类型定义如下, 数据最后是通过HTML本地存储方法`localStorage.setItem`进行持久化存储:
</code> coffeescript
  class Store</p>

<pre><code>constructor: (@name) -&gt;
  store = localStorage.getItem(@name)
  @data = (store and JSON.parse(store)) or {}

save: -&gt;
  localStorage.setItem @name, JSON.stringify(@data)

create: (model) -&gt;
  model.id = model.attributes.id = guid() unless model.id
  @data[model.id] = model
  @save()
  model

update: (model) -&gt;
  @data[model.id] = model
  @save()
  model

find: (model) -&gt;
  @data[model.id]

findAll: -&gt;
  _.values @data

destroy: (model) -&gt;
  delete @data[model.id]
  @save()
  model
</code></pre>

<p><code>``
在定义Collection对象的时候, 需要定义其localStorage属性为上面定义的</code>Store`类型:
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span> (contacts.coffee)</span> <a href='/examples/coffee-bbb-amd-backbone-contacts/coffee/collections/contacts.coffee'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='coffeescript'><span class='line'><span class="nx">define</span> <span class="p">[</span><span class="s1">&#39;use!underscore&#39;</span><span class="p">,</span> <span class="s1">&#39;use!backbone&#39;</span><span class="p">,</span> <span class="s1">&#39;models/contact&#39;</span><span class="p">,</span> <span class="s1">&#39;store&#39;</span><span class="p">],</span> <span class="nf">(_, Backbone, Contact, Store) -&gt;</span>
</span><span class='line'>  <span class="nv">Contacts = </span><span class="nx">Backbone</span><span class="p">.</span><span class="nx">Collection</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span>
</span><span class='line'>    <span class="nv">model: </span><span class="nx">Contact</span>
</span><span class='line'>    <span class="nv">localStorage: </span><span class="k">new</span> <span class="nx">Store</span><span class="p">(</span><span class="s1">&#39;my-contacts&#39;</span><span class="p">)</span>
</span><span class='line'>  <span class="p">)</span>
</span><span class='line'>  <span class="k">new</span> <span class="nx">Contacts</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>Backbone.sync标准CRUD REST接口</h2>

<p>如果采用标准的CRUD REST接口进行数据交换, 那就不用重载Backbone.sync方法, 只需要定义Collection的url属性(字符串或者方法)即可.
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span> (contacts.coffee)</span> <a href='/examples/coffee-bbb-amd-backbone-rest-contacts/coffee/collections/contacts.coffee'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='coffeescript'><span class='line'><span class="nx">define</span> <span class="p">[</span><span class="s1">&#39;use!underscore&#39;</span><span class="p">,</span> <span class="s1">&#39;use!backbone&#39;</span><span class="p">,</span> <span class="s1">&#39;models/contact&#39;</span><span class="p">],</span> <span class="nf">(_, Backbone, Contact) -&gt;</span>
</span><span class='line'>  <span class="nv">Contacts = </span><span class="nx">Backbone</span><span class="p">.</span><span class="nx">Collection</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span>
</span><span class='line'>    <span class="nv">model: </span><span class="nx">Contact</span>
</span><span class='line'>    <span class="nv">url: </span><span class="s1">&#39;http://xiaocong.herokuapp.com/contacts/&#39;</span>
</span><span class='line'>    <span class="nv">parse: </span><span class="nf">(resp) -&gt;</span>
</span><span class='line'>      <span class="nx">resp</span><span class="p">.</span><span class="nx">results</span>
</span><span class='line'>  <span class="p">)</span>
</span><span class='line'>  <span class="k">new</span> <span class="nx">Contacts</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>其中<code>http://xiaocong.herokuapp.com/contacts/</code>实现了标准的CRUD REST接口:</p>

<ul>
<li><strong>POST</strong> /contacts 生成一个新的地址本记录, 并返回带有新生成的id的地址本数据, 供客户端更新model的id.</li>
<li><strong>GET</strong> /contacts 获取所有地址本数据, 由于Collection对象需要的集合数组在返回的JSON字符串的<code>results</code>属性中, 因此需要通过<code>parse</code>方法转换一下返回的结果.</li>
<li><strong>GET</strong> /contacts/id 获取指定id的地址本数据.</li>
<li><strong>PUT</strong> /contacts/id 更新指定id的地址本数据.</li>
<li><strong>DELETE</strong> /contacts/id 删除指定id的地址本数据</li>
</ul>


<p><a href="/examples/coffee-bbb-amd-backbone-rest-contacts/index.html">使用该CRUD REST接口的演示</a>.</p>

<p>下面是托管在<a href="http://www.heroku.com">heroku</a>上的该REST接口的python源代码:</p>

<ul>
<li>使用<a href="http://bottlepy.org/docs/dev/">bottle</a>微型web框架实现HTTP路由管理</li>
<li>使用<a href="http://www.sqlalchemy.org/">sqlalchemy</a>实现数据库的持续化存储</li>
<li>使用<a href="http://www.gevent.org/">gevent</a>实现HTTP并发服务</li>
<li>通过<code>Access-Control-Allow-Origin</code>实现跨域调用</li>
</ul>


<p>``` python app.py
from gevent import monkey; monkey.patch_all()</p>

<p>from bottle import Bottle, route, get, post, put, delete, request, response, run, static_file, HTTPError
from bottle.ext import sqlalchemy
from sqlalchemy import create_engine, Column, Integer, Sequence, String
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy.orm import sessionmaker
from sqlalchemy.exc import SQLAlchemyError</p>

<p>import os</p>

<p>app = Bottle()</p>

<p>@app.route("/")
def hello():</p>

<pre><code>return "APIs for demo!"
</code></pre>

<p>Base = declarative_base()
engine = create_engine(os.environ["SHARED_DATABASE_URL"], echo=True)
create_session = sessionmaker(bind=engine)</p>

<p>class Contact(Base):</p>

<pre><code>__tablename__ = "contact"
id = Column(Integer, Sequence('contact_id_seq'), primary_key=True)
name = Column(String(50))
email = Column(String(64))

def __init__(self, name, email):
    self.name = name
    self.email = email

def __repr__(self):
    return "&lt;Contact('%d', '%s', '%s')&gt;" % (self.id, self.name, self.email)
</code></pre>

<p>contactsApp = Bottle()</p>

<p>@contactsApp.hook("after_request")
def crossDomianHook():</p>

<pre><code>response.headers["Access-Control-Allow-Origin"] = "*"
</code></pre>

<p>@contactsApp.route(path="/", method="OPTIONS")
def options1(*args):</p>

<pre><code>return options(*args)
</code></pre>

<p>@contactsApp.route(path="/:id", method="OPTIONS")
def options2(id, *args):</p>

<pre><code>return options(*args)
</code></pre>

<p>def options(*args):</p>

<pre><code>response.headers["Access-Control-Allow-Methods"] = "GET, POST, PUT, DELETE"
if request.headers.get("Access-Control-Request-Headers"):
    response.headers["Access-Control-Allow-Headers"] = request.headers["Access-Control-Request-Headers"]
</code></pre>

<p>@contactsApp.post("/")
def createContact(db):</p>

<pre><code>'''Create contact'''
contact = Contact(name=request.json["name"], email=request.json["email"])
db.add(contact)
db.commit()
return {"id": contact.id, "name": contact.name, "email": contact.email}
</code></pre>

<p>@contactsApp.get("/")
def getAllContacts(db):</p>

<pre><code>'''Retrieve all contacts'''
contacts = db.query(Contact)
return {"results": [{"id":contact.id, "name":contact.name, "email":contact.email} for contact in contacts]}
</code></pre>

<p>@contactsApp.get("/:id")
def getContact(id, db):</p>

<pre><code>'''Retrieve specified contact with id'''
contact = db.query(Contact).filter_by(id=id).first()
if contact:
    return {"id": contact.id, "name": contact.name, "email": contact.email}
raise HTTPError(404, "Contact not found.")
</code></pre>

<p>@contactsApp.put("/:id")
def updateContact(id, db):</p>

<pre><code>'''Update contact'''
session = create_session()
try:
    session.query(Contact).filter_by(id=id).update({"name": request.json["name"], "email": request.json["email"]})
    session.commit()
except SQLAlchemyError, e:
    session.rollback()
    raise HTTPError(500, "Database Error", e)
finally:
    session.close()
</code></pre>

<p>@contactsApp.delete("/:id")
def deleteContact(id, db):</p>

<pre><code>'''Delete contact'''
session = create_session()
try:
    contact = session.query(Contact).filter_by(id=id).first()
    session.delete(contact)
    session.commit()
except SQLAlchemyError, e:
    session.rollback()
    raise HTTPError(500, "Database Error", e)
finally:
    session.close()
</code></pre>

<p>sqlalchemyplugin = sqlalchemy.Plugin(engine, Base.metadata, create=True)
contactsApp.install(sqlalchemyplugin)
app.mount("/contacts", contactsApp)</p>

<p>if <strong>name</strong> == "<strong>main</strong>":</p>

<pre><code>port = int(os.environ.get("PORT", 5000))
run(app=app, server="gevent", host="0.0.0.0", port=port, reloader=True)
</code></pre>

<p>```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[美妙的Coffee-Script]]></title>
    <link href="http://xiaocong.github.com/blog/2012/06/15/beautiful-coffee-script/"/>
    <updated>2012-06-15T14:36:00+08:00</updated>
    <id>http://xiaocong.github.com/blog/2012/06/15/beautiful-coffee-script</id>
    <content type="html"><![CDATA[<p>JavaScript是标准的函数式动态语言, 但却有Java的语法. 用Java的语法写JavaScript的代码, 就好比穿着西装进行散打, 的确很让人别扭.</p>

<p>CoffeeScript对JavaScript的改造刚好切中要害, 用Ruby/Python的语法重新塑造了JavaScript, 抛弃掉Java语法上繁琐的要求, 让人可以用更简洁的方式写出优雅, 可读性更好的语句.</p>

<h2>简洁</h2>

<p>简洁意味着花更少的时间进行<em>coding</em>. 难道不是么? 我相信程序员都愿意去做真正意义的编程, 而不是枯燥地敲键盘<em>coding</em>.</p>

<p>大家可以对比一下CoffeeScript和JavaScript的语法, 看看CoffeeScript的简洁:</p>

<ul>
<li><a href="http://coffeescript.org/#literals">函数</a></li>
<li><a href="http://coffeescript.org/#conditionals">条件</a></li>
<li><a href="http://coffeescript.org/#splats">参数展开</a></li>
<li><a href="http://coffeescript.org/#loops">循环和列表推导</a></li>
<li><a href="http://coffeescript.org/#slices">数组切片</a></li>
<li><a href="http://coffeescript.org/#classes">类和继承</a></li>
<li><a href="http://coffeescript.org/#destructuring">析构赋值</a></li>
</ul>


<p>CoffeeScript的平均代码量估计不超过等价JavaScript代码量的50%.</p>

<!--more-->


<h2>优雅</h2>

<p>Coffee的代码看起来让人赏心悦目, 如同看诗一样:
``` coffeescript</p>

<h1>Assignment:</h1>

<p>number   = 42
opposite = true</p>

<h1>Conditions:</h1>

<p>number = -42 if opposite</p>

<h1>Functions:</h1>

<p>square = (x) -> x * x</p>

<h1>Arrays:</h1>

<p>list = [1, 2, 3, 4, 5]</p>

<h1>Objects:</h1>

<p>math =
  root:   Math.sqrt
  square: square
  cube:   (x) -> x * square x</p>

<h1>Splats:</h1>

<p>race = (winner, runners...) ->
  print winner, runners</p>

<h1>Existence:</h1>

<p>alert "I knew it!" if elvis?</p>

<h1>Array comprehensions:</h1>

<p>cubes = (math.cube num for num in list)
<code>
同样的代码翻译成JavaScript代码, 看起来的心情可能就不一样了:
</code> javascript
var cubes, list, math, num, number, opposite, race, square,
  __slice = [].slice;</p>

<p>number = 42;</p>

<p>opposite = true;</p>

<p>if (opposite) {
  number = -42;
}</p>

<p>square = function(x) {
  return x * x;
};</p>

<p>list = [1, 2, 3, 4, 5];</p>

<p>math = {
  root: Math.sqrt,
  square: square,
  cube: function(x) {</p>

<pre><code>return x * square(x);
</code></pre>

<p>  }
};</p>

<p>race = function() {
  var runners, winner;
  winner = arguments[0], runners = 2 &lt;= arguments.length ? __slice.call(arguments, 1) : [];
  return print(winner, runners);
};</p>

<p>if (typeof elvis !== "undefined" &amp;&amp; elvis !== null) {
  alert("I knew it!");
}</p>

<p>cubes = (function() {
  var <em>i, </em>len, <em>results;
  </em>results = [];
  for (<em>i = 0, </em>len = list.length; <em>i &lt; </em>len; _i++) {</p>

<pre><code>num = list[_i];
_results.push(math.cube(num));
</code></pre>

<p>  }
  return _results;
})();
```
一个是诗一般的代码, 另一个就是代码, 看起来心情能一样么?</p>

<h2>可读性</h2>

<p>有谁愿意一次又一次地花时间琢磨<code>for</code>循环到<code>n</code>还是<code>n-1</code>结束呢? 这种琢磨对于软件来说到底有多大意思? 我们是按照自然语言的方式进行思维, 如果也按照自然语言的方式写代码, 那我们的大脑就不会花无谓的时间进行翻译了.</p>

<p>看看下面CoffeeScript的代码， 是不是读完代码就明白了这段代码的意思?
<code>coffeescript
foods = ['broccoli', 'spinach', 'chocolate']
eat food for food in foods when food isnt 'chocolate'
</code>
然后再对照等价的JavaScript代码, 读代码的过程中, 不知道你的大脑需要花多长时间进行翻译?
``` javascript
var food, foods, <em>i, </em>len;</p>

<p>foods = ['broccoli', 'spinach', 'chocolate'];</p>

<p>for (<em>i = 0, </em>len = foods.length; <em>i &lt; </em>len; <em>i++) {
  food = foods[</em>i];
  if (food !== 'chocolate') {</p>

<pre><code>eat(food);
</code></pre>

<p>  }
}
```</p>

<h2>效率</h2>

<p>代码逻辑需要技巧, 而程序逻辑需要智慧. CoffeeScript尽可能地在语法上解决代码逻辑, 而让你的大脑更多地去思考程序逻辑.</p>

<h2>示例</h2>

<p>本示例将地址本的JavaScript的实现改写为CoffeeScript进行实现, 同时增加了Grunt的CoffeeScript编译任务, 主要改动包括:</p>

<ul>
<li>coffee源代码目录: coffee</li>
<li>grunt coffee编译任务: tasks/coffee.js</li>
<li>更改grunt配置文件以支持coffee的编译: grunt.js</li>
</ul>


<p>下面的链接你可以找到所有的源代码:</p>

<ul>
<li><a href="https://github.com/xiaocong/xiaocong.github.com/tree/source/source/examples/bbb-amd-backbone-contacts/">地址本-JavaScript源码</a></li>
<li><a href="https://github.com/xiaocong/xiaocong.github.com/tree/source/source/examples/coffee-bbb-amd-backbone-contacts/">地址本-CoffeeScript源码</a></li>
<li><a href="/examples/coffee-bbb-amd-backbone-contacts/index.html">地址本-CoffeeScript演示</a></li>
</ul>


<h2>参考</h2>

<ul>
<li><a href="http://coffeescript.org/">CoffeeScript官网</a></li>
<li><a href="http://arcturo.github.com/library/coffeescript/">The Little Book on CoffeeScript</a></li>
<li><a href="http://autotelicum.github.com/Smooth-CoffeeScript/">Smooth CoffeeScript</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[在AMD项目中使用grunt/bbb进行构建和发布]]></title>
    <link href="http://xiaocong.github.com/blog/2012/05/30/use-bbb-slash-grunt-dot-js-to-build-slash-deploy-amd-project/"/>
    <updated>2012-05-30T12:25:00+08:00</updated>
    <id>http://xiaocong.github.com/blog/2012/05/30/use-bbb-slash-grunt-dot-js-to-build-slash-deploy-amd-project</id>
    <content type="html"><![CDATA[<h2>AMD项目的构建和发布</h2>

<p>在 Javascript 前端项目中, 为了提高页面的响应速度, 通常需要对 js/css 文件进行:</p>

<ul>
<li>concat, 将多个 js 或者 css 文件合成一个文件, 这样能减少浏览器给服务器发送请求的此次数, 减少在网络通讯握手上花费的时间;</li>
<li>minify, 去除 js 或者 css 文件中多余的字符, 例如注释, 换行, 空格等, 并将变量的可读的长名称改为不可读的短名称, 缩短 js 和 css 文件的长度, 减少网络传输的时间;</li>
</ul>


<p>目前已经有很多进行 Javascript 构建和发布管理的工具, 包括<a href="https://github.com/mde/jake">Jake</a>, <a href="https://github.com/cowboy/grunt">Grunt</a>, <a href="https://code.google.com/p/js-build-tools">js-build-tools</a> (ant tasks collection).
<a href="http://requirejs.org/">RequireJS</a>也已经提供了一个很好的优化 js 文件的工具<a href="http://requirejs.org/docs/optimization.html">r.js</a>, 可以将多个 AMD 模块合并成一个文件.
这里主要介绍 Grunt 的一个 plugin 集合: <a href="https://github.com/backbone-boilerplate/grunt-bbb">Grunt-bbb</a></p>

<h2><a href="https://github.com/backbone-boilerplate/grunt-bbb">Grunt-bbb</a></h2>

<p>bbb 主要包含下面这些 tasks:</p>

<ul>
<li><code>init</code>
初始化一个空的项目模板.</li>
<li><code>lint</code>
确保所有的 js 文件符合 JSHint.</li>
<li><code>less</code>
编译 LESS 生成 css 文件.</li>
<li><code>mincss</code>
Minify 所有的 css 文件,并合并成一个 css 文件.</li>
<li><code>min</code>
grunt 内置 task, Minify js 文件.</li>
<li><code>concat</code>
合并多个文件到一个文件.</li>
<li><code>requirejs</code>
利用<code>r.js</code>合并<a href="http://requirejs.org/">RequireJS</a>模块到一个 js 文件.</li>
<li><code>server</code>
静态文件的 HTTP 服务, 用于开发调试.</li>
</ul>


<h3>安装</h3>

<p><code>bash
$ npm install -g bbb
</code></p>

<h3>新项目初始化</h3>

<p>进入空的项目目录,然后运行:</p>

<p><code>bash
$ bbb init
</code></p>

<p>根据命令行的提示输入相应的内容, 然后会生成一个空的 <code>grunt.js</code> 文件.</p>

<h3>目录结构</h3>

<p>bbb 要求按照如下目录结构组织源代码:</p>

<p><code>
|-app
   |-项目 js 文件
|-dist
   |-build生成的发布文件
|-assets
   |-require.js
   |-backbone.js
   |-underscore.js 等需要的 js 库文件
|-index.html
|-favicon.ico
</code></p>

<p>css 和 img 文件缺省目录在 <code>assets/</code> 目录中. 我们可以更改 <code>grunt.js</code> 来增加/更改/删除任务(task), 以及更改任务的设置,
包括缺省目录.</p>

<!--more-->


<h2>在<a href="https://github.com/xiaocong/xiaocong.github.com/tree/source/source/examples/amd-backbone-contacts/">AMD Backbone Contacts</a>中增加<code>bbb</code>构建配置</h2>

<p><a href="/examples/amd-backbone-contacts/index.html">demo</a> 项目中没有对 js 文件进行任何优化, 下面就逐步修
改该项目来引入<code>bbb</code>进行项目构建和发布.</p>

<ul>
<li>修改项目目录结构, 来适应<code>bbb</code>的要求.</li>
</ul>


<p>主要的改动在于将<code>backbone</code>, <code>require</code>, <code>underscore</code>等库文件从<code>js/libs/</code>移动到<code>assets/js/</code>目录, 将
<code>js/</code>目录更名为<code>app/</code>, 将<code>templates/</code>和<code>css/</code>目录移动到<code>assets/</code>.</p>

<ul>
<li>增加<code>grunt.js</code>配置文件.</li>
</ul>


<p>可以用<code>bbb init</code>命令来生成缺省的<code>grunt.js</code>配置文件, <em>必须</em>包含下面的代码:
``` javascript
module.exports = function(grunt) {
  grunt.initConfig({</p>

<pre><code>//config options...
</code></pre>

<p>  });
};
<code>
- 在`grunt.js`配置选项中定义文件路径.
</code> javascript
  grunt.initConfig({</p>

<pre><code>//...
dirs: {
  debug: "dist/debug", // debug files under the folder
  release: "dist/release" // release files under the folder
},
//...
</code></pre>

<p>  });
<code>
- 在 `grunt.js` 配置选项中定义文件清理任务 `clean`.
</code> javascript
  grunt.initConfig({</p>

<pre><code>//...
clean: ["&lt;config:dirs.debug&gt;", "&lt;config:dirs.release&gt;"],
//...
</code></pre>

<p>  });
<code>
- 在`grunt.js`配置选项中定义 `lint` 任务, 确保所有在 `app/` 目录下的 `js` 文件都符合 `JSHint`.
</code> javascript
  grunt.initConfig({</p>

<pre><code>//...
lint: {
  beforeconcat: [
    "app/**/*.js"
  ],
  afterconcat: [
    "dist/debug/assets/js/require/require.js"
  ]
},
jshint: {
  options: {
    scripturl: true
  }
},
//...
</code></pre>

<p>  });
<code>``
*注:</code>lint:afterconcat<code>任务运行会报jQuery代码的错, 没有仔细调查原因, 因此在</code>concat<code>完成后没有调用</code>lint:afterconcat`任务.*</p>

<ul>
<li>在<code>grunt.js</code>配置选项中定义 <code>requirejs</code> 任务, 合并所有项目所需要的 js 文件到一个 <code>require.js</code> 文件(真正的
<code>assets/js/require/require.js</code>文件不会包含在这个输出文件中, 后面会用<code>concat</code>任务将真正的<code>require.js</code>合并进来).
``` javascript
grunt.initConfig({
  //...
  requirejs: {

<pre><code>// Include the main configuration file
mainConfigFile: "app/config.js",
// Output file
out: "dist/debug/assets/js/require/require.js",
// Root application module
name: "config",
// Do not wrap everything in an IIFE
wrap: false
</code></pre>

<p>  }
  //...
});
```</p></li>
<li>在<code>grunt.js</code>配置选项中定义<code>concat</code>任务, 将<code>require.js</code>库文件合并到<code>requirejs</code>任务的输出文件中去.
``` javascript
grunt.initConfig({
  //...
  concat: {

<pre><code>"dist/debug/assets/js/require/require.js": [
  "assets/js/require/require.js",
  "dist/debug/assets/js/require/require.js"
]
</code></pre>

<p>  },
  //...
});
```</p></li>
<li>在<code>grunt.js</code>配置选项中定义<code>min</code>任务, Minify <code>concat</code>任务生成的文件到<code>dist/release/assets/js/require/require.js</code>.
``` javascript
grunt.initConfig({
  //...
  min: {

<pre><code>"dist/release/assets/js/require/require.js": [
  "dist/debug/assets/js/require/require.js"
]
</code></pre>

<p>  },
  //...
});
```</p></li>
<li>在<code>grunt.js</code>配置选项中定义<code>mincss</code>任务, Minify所有的<code>css</code>文件到<code>dist/release/assets/css/index.css</code>.
``` javascript
grunt.initConfig({
  //...
  mincss: {

<pre><code>"dist/release/assets/css/index.css": [
  "assets/css/application.css"
]
</code></pre>

<p>  },
});
```</p></li>
<li>在<code>grunt.js</code>配置选项中定义<code>copy</code>任务, 复制相应的文件到<code>dist/debug/</code>或者<code>dist/release/</code>目录.
``` javascript
grunt.initConfig({
  //...
  copy: {

<pre><code>debug: {
  src: ["assets/css/**/*.css", "favicon.ico"],
  renames: {"index.noconfig.html": "index.html"},
  dest: "&lt;config:dirs.debug&gt;"
},
release: {
  src: ["favicon.ico"],
  renames: {"index.noconfig.html": "index.html"},
  dest: "&lt;config:dirs.release&gt;"
}
</code></pre>

<p>  },
  //...
});
<code>
`bbb`和`grunt`没有内置文件复制任务, 因此我们需要自己实现这个任务. 这里直接采用
[jquery-ui](https://github.com/jquery/jquery-ui/blob/master/grunt.js#L392)的实现.
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>copy  (copy.js)</span> <a href='/examples/bbb-amd-backbone-contacts/tasks/copy.js'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">// Copy multitask definition, copied from jquery grunt.js file.</span>
</span><span class='line'><span class="c1">// It takes src/dest/rename/strip params.</span>
</span><span class='line'><span class="nx">module</span><span class="p">.</span><span class="nx">exports</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">grunt</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">grunt</span><span class="p">.</span><span class="nx">registerMultiTask</span><span class="p">(</span> <span class="s2">&quot;copy&quot;</span><span class="p">,</span> <span class="s2">&quot;Copy files to destination folder and replace @VERSION with pkg.version&quot;</span><span class="p">,</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="kd">function</span> <span class="nx">replaceVersion</span><span class="p">(</span> <span class="nx">source</span> <span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="nx">source</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span> <span class="sr">/@VERSION/g</span><span class="p">,</span> <span class="nx">grunt</span><span class="p">.</span><span class="nx">config</span><span class="p">(</span> <span class="s2">&quot;pkg.version&quot;</span> <span class="p">)</span> <span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="kd">function</span> <span class="nx">copyFile</span><span class="p">(</span> <span class="nx">src</span><span class="p">,</span> <span class="nx">dest</span> <span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span> <span class="sr">/(js|css)$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span> <span class="nx">src</span> <span class="p">)</span> <span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">grunt</span><span class="p">.</span><span class="nx">file</span><span class="p">.</span><span class="nx">copy</span><span class="p">(</span> <span class="nx">src</span><span class="p">,</span> <span class="nx">dest</span><span class="p">,</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">process</span><span class="o">:</span> <span class="nx">replaceVersion</span>
</span><span class='line'>        <span class="p">});</span>
</span><span class='line'>      <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">grunt</span><span class="p">.</span><span class="nx">file</span><span class="p">.</span><span class="nx">copy</span><span class="p">(</span> <span class="nx">src</span><span class="p">,</span> <span class="nx">dest</span> <span class="p">);</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">files</span> <span class="o">=</span> <span class="nx">grunt</span><span class="p">.</span><span class="nx">file</span><span class="p">.</span><span class="nx">expandFiles</span><span class="p">(</span> <span class="k">this</span><span class="p">.</span><span class="nx">file</span><span class="p">.</span><span class="nx">src</span> <span class="p">),</span>
</span><span class='line'>      <span class="nx">target</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">file</span><span class="p">.</span><span class="nx">dest</span> <span class="o">+</span> <span class="s2">&quot;/&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">strip</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">.</span><span class="nx">strip</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">renameCount</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">fileName</span><span class="p">;</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span> <span class="k">typeof</span> <span class="nx">strip</span> <span class="o">===</span> <span class="s2">&quot;string&quot;</span> <span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">strip</span> <span class="o">=</span> <span class="k">new</span> <span class="nb">RegExp</span><span class="p">(</span> <span class="s2">&quot;^&quot;</span> <span class="o">+</span> <span class="nx">grunt</span><span class="p">.</span><span class="nx">template</span><span class="p">.</span><span class="nx">process</span><span class="p">(</span> <span class="nx">strip</span><span class="p">,</span> <span class="nx">grunt</span><span class="p">.</span><span class="nx">config</span><span class="p">()</span> <span class="p">).</span><span class="nx">replace</span><span class="p">(</span> <span class="sr">/[\-\[\]{}()*+?.,\\\^$|#\s]/g</span><span class="p">,</span> <span class="s2">&quot;\\$&amp;&quot;</span> <span class="p">)</span> <span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="nx">files</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span> <span class="nx">fileName</span> <span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="kd">var</span> <span class="nx">targetFile</span> <span class="o">=</span> <span class="nx">strip</span> <span class="o">?</span> <span class="nx">fileName</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span> <span class="nx">strip</span><span class="p">,</span> <span class="s2">&quot;&quot;</span> <span class="p">)</span> <span class="o">:</span> <span class="nx">fileName</span><span class="p">;</span>
</span><span class='line'>      <span class="nx">copyFile</span><span class="p">(</span> <span class="nx">fileName</span><span class="p">,</span> <span class="nx">target</span> <span class="o">+</span> <span class="nx">targetFile</span> <span class="p">);</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'>    <span class="nx">grunt</span><span class="p">.</span><span class="nx">log</span><span class="p">.</span><span class="nx">writeln</span><span class="p">(</span> <span class="s2">&quot;Copied &quot;</span> <span class="o">+</span> <span class="nx">files</span><span class="p">.</span><span class="nx">length</span> <span class="o">+</span> <span class="s2">&quot; files.&quot;</span> <span class="p">);</span>
</span><span class='line'>    <span class="k">for</span> <span class="p">(</span> <span class="nx">fileName</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">.</span><span class="nx">renames</span> <span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">renameCount</span> <span class="o">+=</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'>      <span class="nx">copyFile</span><span class="p">(</span> <span class="nx">fileName</span><span class="p">,</span> <span class="nx">target</span> <span class="o">+</span> <span class="nx">grunt</span><span class="p">.</span><span class="nx">template</span><span class="p">.</span><span class="nx">process</span><span class="p">(</span> <span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">.</span><span class="nx">renames</span><span class="p">[</span> <span class="nx">fileName</span> <span class="p">],</span> <span class="nx">grunt</span><span class="p">.</span><span class="nx">config</span><span class="p">()</span> <span class="p">)</span> <span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span> <span class="nx">renameCount</span> <span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">grunt</span><span class="p">.</span><span class="nx">log</span><span class="p">.</span><span class="nx">writeln</span><span class="p">(</span> <span class="s2">&quot;Renamed &quot;</span> <span class="o">+</span> <span class="nx">renameCount</span> <span class="o">+</span> <span class="s2">&quot; files.&quot;</span> <span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">});</span>
</span><span class='line'><span class="p">};</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
`grunt.js`配置文件中需要加载该任务:
</code> javascript
grunt.loadTasks("tasks");  //加载所有在'tasks/'目录下的<code>task</code>.
```</p></li>
<li><p>在<code>grunt.js</code>配置选项中定义<code>server</code>任务, 用于开发调试.
``` javascript
grunt.initConfig({
  //...
  server: {</p>

<pre><code>port: 8000,
base: ".",
folders: {
  "app": "app",
  "assets": "assets"
},
debug: {
  folders: {
    "app": "dist/debug",
    "assets": "dist/debug/assets",
    "": "dist/debug"
  }
},
release: {
  folders: {
    "app": "dist/release",
    "assets": "dist/release/assets",
    "": "dist/release"
  }
}
</code></pre>

<p>  },
  //...
});
```
这里定义了3个任务:</p></li>
<li><p><strong><code>server</code></strong>: 侦听并返回<code>.</code>目录下的文件, 这个服务不对 js 和 css 文件作任何 Minify 和 concat.</p></li>
<li><strong><code>server:debug</code></strong>: 侦听并返回<code>dist/debug/</code>目录下的文件.</li>
<li><p><strong><code>server:release</code></strong>: 侦听并返回<code>dist/release/</code>目录下的文件.</p></li>
<li><p>将上诉任务进行串接, 定义复合任务.
<code>javascript
grunt.registerTask("default", "clean lint:beforeconcat");
grunt.registerTask("debug", "default copy:debug requirejs concat");
grunt.registerTask("release", "debug copy:release mincss min");
</code></p></li>
<li><strong><code>default</code></strong>: 清除<code>dist/</code>目录, <code>lint</code> <code>app/</code>目录下的所有 js 文件.</li>
<li><strong><code>debug</code></strong>: 调用<code>default</code>任务, 复制相关文件到<code>dist/debug/</code>目录下, 合并 js(AMD模块) 文件, 最后合并<code>require.js</code>库文件.</li>
<li><strong><code>release</code></strong>: 调用<code>debug</code>任务, 复制相关文件到<code>dist/release/</code>目录下, Minify css 文件, Minify js 文件.</li>
</ul>


<p>至此, 所有的任务都已经定义完成. 下面是完整的<code>grunt.js</code>文件.
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>gruntfile  (grunt.js)</span> <a href='/examples/bbb-amd-backbone-contacts/grunt.js'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
<span class='line-number'>168</span>
<span class='line-number'>169</span>
<span class='line-number'>170</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">// This is the main application configuration file.  It is a Grunt</span>
</span><span class='line'><span class="c1">// configuration file, which you can learn more about here:</span>
</span><span class='line'><span class="c1">// https://github.com/cowboy/grunt/blob/master/docs/configuring.md</span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'><span class="nx">module</span><span class="p">.</span><span class="nx">exports</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">grunt</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">grunt</span><span class="p">.</span><span class="nx">initConfig</span><span class="p">({</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// define the debug/release directories for distribution.</span>
</span><span class='line'>    <span class="c1">// TODO, maybe remove it later. I don&#39;t like hardcode, but sometimes</span>
</span><span class='line'>    <span class="c1">// hardcode is more simple.</span>
</span><span class='line'>    <span class="nx">dirs</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">debug</span><span class="o">:</span> <span class="s2">&quot;dist/debug&quot;</span><span class="p">,</span> <span class="c1">// debug files under the folder</span>
</span><span class='line'>      <span class="nx">release</span><span class="o">:</span> <span class="s2">&quot;dist/release&quot;</span> <span class="c1">// release files under the folder</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// The clean task ensures all files are removed from the dist/ directory so</span>
</span><span class='line'>    <span class="c1">// that no files linger from previous builds.</span>
</span><span class='line'>    <span class="nx">clean</span><span class="o">:</span> <span class="p">[</span><span class="s2">&quot;&lt;config:dirs.debug&gt;&quot;</span><span class="p">,</span> <span class="s2">&quot;&lt;config:dirs.release&gt;&quot;</span><span class="p">],</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// The lint task will run the build configuration and the application</span>
</span><span class='line'>    <span class="c1">// JavaScript through JSHint and report any errors.  You can change the</span>
</span><span class='line'>    <span class="c1">// options for this task, by reading this:</span>
</span><span class='line'>    <span class="c1">// https://github.com/cowboy/grunt/blob/master/docs/task_lint.md</span>
</span><span class='line'>    <span class="nx">lint</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">beforeconcat</span><span class="o">:</span> <span class="p">[</span>
</span><span class='line'>        <span class="s2">&quot;app/**/*.js&quot;</span>
</span><span class='line'>      <span class="p">],</span>
</span><span class='line'>      <span class="nx">afterconcat</span><span class="o">:</span> <span class="p">[</span>
</span><span class='line'>        <span class="s2">&quot;dist/debug/assets/js/require/require.js&quot;</span>
</span><span class='line'>      <span class="p">]</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// The jshint option for scripturl is set to lax, because the anchor</span>
</span><span class='line'>    <span class="c1">// override inside main.js needs to test for them so as to not accidentally</span>
</span><span class='line'>    <span class="c1">// route.</span>
</span><span class='line'>    <span class="nx">jshint</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">options</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">scripturl</span><span class="o">:</span> <span class="kc">true</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// The copy task is to copy files from source to distribution directory.</span>
</span><span class='line'>    <span class="nx">copy</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">debug</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">src</span><span class="o">:</span> <span class="p">[</span><span class="s2">&quot;assets/css/**/*.css&quot;</span><span class="p">,</span> <span class="s2">&quot;favicon.ico&quot;</span><span class="p">],</span>
</span><span class='line'>        <span class="nx">renames</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="s2">&quot;index.noconfig.html&quot;</span><span class="o">:</span> <span class="s2">&quot;index.html&quot;</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>        <span class="nx">dest</span><span class="o">:</span> <span class="s2">&quot;&lt;config:dirs.debug&gt;&quot;</span>
</span><span class='line'>      <span class="p">},</span>
</span><span class='line'>      <span class="nx">release</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">src</span><span class="o">:</span> <span class="p">[</span><span class="s2">&quot;favicon.ico&quot;</span><span class="p">],</span>
</span><span class='line'>        <span class="nx">renames</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="s2">&quot;index.noconfig.html&quot;</span><span class="o">:</span> <span class="s2">&quot;index.html&quot;</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>        <span class="nx">dest</span><span class="o">:</span> <span class="s2">&quot;&lt;config:dirs.release&gt;&quot;</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// The concatenate task is used here to merge the require.js into the</span>
</span><span class='line'>    <span class="c1">// application code.  It&#39;s named dist/debug/assets/js/require/require.js,</span>
</span><span class='line'>    <span class="c1">//because we want to only load one script file in index.html.</span>
</span><span class='line'>    <span class="nx">concat</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="s2">&quot;dist/debug/assets/js/require/require.js&quot;</span><span class="o">:</span> <span class="p">[</span>
</span><span class='line'>        <span class="s2">&quot;assets/js/require/require.js&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;dist/debug/assets/js/require/require.js&quot;</span>
</span><span class='line'>      <span class="p">]</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// This task uses the MinCSS Node.js project to take all your CSS files in</span>
</span><span class='line'>    <span class="c1">// order and concatenate them into a single CSS file named index.css.  It</span>
</span><span class='line'>    <span class="c1">// also minifies all the CSS as well.  This is named index.css, because we</span>
</span><span class='line'>    <span class="c1">// only want to load one stylesheet in index.html.</span>
</span><span class='line'>    <span class="nx">mincss</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="s2">&quot;dist/release/assets/css/index.css&quot;</span><span class="o">:</span> <span class="p">[</span>
</span><span class='line'>        <span class="s2">&quot;assets/css/application.css&quot;</span>
</span><span class='line'>      <span class="p">]</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Takes the built require.js file and minifies it for filesize benefits.</span>
</span><span class='line'>    <span class="nx">min</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="s2">&quot;dist/release/assets/js/require/require.js&quot;</span><span class="o">:</span> <span class="p">[</span>
</span><span class='line'>        <span class="s2">&quot;dist/debug/assets/js/require/require.js&quot;</span>
</span><span class='line'>      <span class="p">]</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Running the server without specifying an action will run the defaults,</span>
</span><span class='line'>    <span class="c1">// port: 8080 and host: 127.0.0.1.  If you would like to change these</span>
</span><span class='line'>    <span class="c1">// defaults, simply add in the properties `port` and `host` respectively.</span>
</span><span class='line'>    <span class="c1">//</span>
</span><span class='line'>    <span class="c1">// Changing the defaults might look something like this:</span>
</span><span class='line'>    <span class="c1">//</span>
</span><span class='line'>    <span class="c1">// server: {</span>
</span><span class='line'>    <span class="c1">//   host: &quot;127.0.0.1&quot;, port: 9001</span>
</span><span class='line'>    <span class="c1">//   debug: { ... can set host and port here too ...</span>
</span><span class='line'>    <span class="c1">//  }</span>
</span><span class='line'>    <span class="c1">//</span>
</span><span class='line'>    <span class="c1">//  To learn more about using the server task, please refer to the code</span>
</span><span class='line'>    <span class="c1">//  until documentation has been written.</span>
</span><span class='line'>    <span class="c1">// Run below commands will cause:</span>
</span><span class='line'>    <span class="c1">// $ bbb server</span>
</span><span class='line'>    <span class="c1">//      Run server under . folder. It uses require.js to load all needed</span>
</span><span class='line'>    <span class="c1">//      js files, templates and css files.</span>
</span><span class='line'>    <span class="c1">// $ bbb server:debug</span>
</span><span class='line'>    <span class="c1">//      Run server under dist/debug folder. All js files are merged into one</span>
</span><span class='line'>    <span class="c1">//      require.js. Make sure you run &#39;bbb debug&#39; firstly.</span>
</span><span class='line'>    <span class="c1">// $ bbb server:debug</span>
</span><span class='line'>    <span class="c1">//      Run server under dist/release folder.</span>
</span><span class='line'>    <span class="c1">//      All js files are merged into one require.js and minized. All css</span>
</span><span class='line'>    <span class="c1">//      files are merged into one and minized.</span>
</span><span class='line'>    <span class="c1">//      Make sure you run &#39;bbb release&#39; firstly.</span>
</span><span class='line'>    <span class="nx">server</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">port</span><span class="o">:</span> <span class="mi">8000</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">base</span><span class="o">:</span> <span class="s2">&quot;.&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">folders</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s2">&quot;app&quot;</span><span class="o">:</span> <span class="s2">&quot;app&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;assets&quot;</span><span class="o">:</span> <span class="s2">&quot;assets&quot;</span>
</span><span class='line'>      <span class="p">},</span>
</span><span class='line'>      <span class="nx">debug</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">folders</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="s2">&quot;app&quot;</span><span class="o">:</span> <span class="s2">&quot;dist/debug&quot;</span><span class="p">,</span>
</span><span class='line'>          <span class="s2">&quot;assets&quot;</span><span class="o">:</span> <span class="s2">&quot;dist/debug/assets&quot;</span><span class="p">,</span>
</span><span class='line'>          <span class="s2">&quot;&quot;</span><span class="o">:</span> <span class="s2">&quot;dist/debug&quot;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>      <span class="p">},</span>
</span><span class='line'>      <span class="nx">release</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">folders</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="s2">&quot;app&quot;</span><span class="o">:</span> <span class="s2">&quot;dist/release&quot;</span><span class="p">,</span>
</span><span class='line'>          <span class="s2">&quot;assets&quot;</span><span class="o">:</span> <span class="s2">&quot;dist/release/assets&quot;</span><span class="p">,</span>
</span><span class='line'>          <span class="s2">&quot;&quot;</span><span class="o">:</span> <span class="s2">&quot;dist/release&quot;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// This task uses James Burke&#39;s excellent r.js AMD build tool.  In the</span>
</span><span class='line'>    <span class="c1">// future other builders may be contributed as drop-in alternatives.</span>
</span><span class='line'>    <span class="nx">requirejs</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="c1">// Include the main configuration file</span>
</span><span class='line'>      <span class="nx">mainConfigFile</span><span class="o">:</span> <span class="s2">&quot;app/config.js&quot;</span><span class="p">,</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1">// Output file</span>
</span><span class='line'>      <span class="nx">out</span><span class="o">:</span> <span class="s2">&quot;dist/debug/assets/js/require/require.js&quot;</span><span class="p">,</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1">// Root application module</span>
</span><span class='line'>      <span class="nx">name</span><span class="o">:</span> <span class="s2">&quot;config&quot;</span><span class="p">,</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1">// Do not wrap everything in an IIFE</span>
</span><span class='line'>      <span class="nx">wrap</span><span class="o">:</span> <span class="kc">false</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="p">});</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// load tasks from tasks/ folder.</span>
</span><span class='line'>  <span class="nx">grunt</span><span class="p">.</span><span class="nx">loadTasks</span><span class="p">(</span><span class="s2">&quot;tasks&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// The default task will remove all contents inside the dist/ folder, lint</span>
</span><span class='line'>  <span class="c1">// all your code.</span>
</span><span class='line'>  <span class="nx">grunt</span><span class="p">.</span><span class="nx">registerTask</span><span class="p">(</span><span class="s2">&quot;default&quot;</span><span class="p">,</span> <span class="s2">&quot;clean lint:beforeconcat&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// The debug task will remove all contents inside the dist/ folder, lint all</span>
</span><span class='line'>  <span class="c1">// js code under app/ folder, copy files to dist/debug folder, combine all</span>
</span><span class='line'>  <span class="c1">// application files into require.js, and then concat real require.js with</span>
</span><span class='line'>  <span class="c1">// the application require.js file.</span>
</span><span class='line'>  <span class="nx">grunt</span><span class="p">.</span><span class="nx">registerTask</span><span class="p">(</span><span class="s2">&quot;debug&quot;</span><span class="p">,</span> <span class="s2">&quot;default copy:debug requirejs concat&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// The release task will perform debug task, copy files to dist/release folder,</span>
</span><span class='line'>  <span class="c1">// minmize css file, and minimize require.js into dist/release.</span>
</span><span class='line'>  <span class="nx">grunt</span><span class="p">.</span><span class="nx">registerTask</span><span class="p">(</span><span class="s2">&quot;release&quot;</span><span class="p">,</span> <span class="s2">&quot;debug copy:release mincss min&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">};</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>运行</h2>

<ul>
<li><p>运行 HTTP 服务器于<a href="/examples/bbb-amd-backbone-contacts/index.html">开发版本</a>:
<code>javascript
$ bbb server
</code></p></li>
<li><p>发布文件到<code>dist/debug/</code>目录, 并运行 HTTP 服务器于 <a href="/examples/bbb-amd-backbone-contacts/dist/debug/index.html">debug 版本</a>:
<code>javascript
$ bbb debug
$ bbb server:debug
</code></p></li>
<li><p>发布文件到<code>dist/release/</code>目录, 并运行 HTTP 服务器于 <a href="/examples/bbb-amd-backbone-contacts/dist/release/index.html">release 版本</a>:
<code>javascript
$ bbb release
$ bbb server:release
</code></p></li>
</ul>


<p>这里可以查看所有的<strong><a href="https://github.com/xiaocong/xiaocong.github.com/tree/source/source/examples/bbb-amd-backbone-contacts/">源代码</a></strong>.</p>

<h2>参考</h2>

<ol>
<li><a href="http://requirejs.org/">RequireJS官方网站</a></li>
<li><a href="https://github.com/cowboy/grunt">Grunt.js</a></li>
<li><a href="https://github.com/backbone-boilerplate/grunt-bbb">bbb</a></li>
<li><a href="https://github.com/cowboy/grunt/blob/master/docs/api.md">Grunt API</a></li>
<li><a href="https://github.com/jquery/jquery-ui/blob/master/grunt.js">jQuery-ui自定义grunt任务</a></li>
</ol>

]]></content>
  </entry>
  
</feed>
