<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: javascript | 葱丝瓣酱]]></title>
  <link href="http://xiaocong.github.com/blog/categories/javascript/atom.xml" rel="self"/>
  <link href="http://xiaocong.github.com/"/>
  <updated>2012-05-31T15:42:09+08:00</updated>
  <id>http://xiaocong.github.com/</id>
  <author>
    <name><![CDATA[Xiaocong He]]></name>
    <email><![CDATA[xiaocong@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[在AMD项目中使用grunt/bbb进行构建和发布]]></title>
    <link href="http://xiaocong.github.com/blog/2012/05/30/use-bbb-slash-grunt-dot-js-to-build-slash-deploy-amd-project/"/>
    <updated>2012-05-30T12:25:00+08:00</updated>
    <id>http://xiaocong.github.com/blog/2012/05/30/use-bbb-slash-grunt-dot-js-to-build-slash-deploy-amd-project</id>
    <content type="html"><![CDATA[<h2>AMD项目的构建和发布</h2>

<p>在 Javascript 前端项目中, 为了提高页面的响应速度, 通常需要对 js/css 文件进行:</p>

<ul>
<li>concat, 将多个 js 或者 css 文件合成一个文件, 这样能减少浏览器给服务器发送请求的此次数, 减少在网络通讯握手上花费的时间;</li>
<li>minify, 去除 js 或者 css 文件中多余的字符, 例如注释, 换行, 空格等, 并将变量的可读的长名称改为不可读的短名称, 缩短 js 和 css 文件的长度, 减少网络传输的时间;</li>
</ul>


<p>目前已经有很多进行 Javascript 构建和发布管理的工具, 包括<a href="https://github.com/mde/jake">Jake</a>, <a href="https://github.com/cowboy/grunt">Grunt</a>, <a href="https://code.google.com/p/js-build-tools">js-build-tools</a> (ant tasks collection).
<a href="http://requirejs.org/">RequireJS</a>也已经提供了一个很好的优化 js 文件的工具<a href="http://requirejs.org/docs/optimization.html">r.js</a>, 可以将多个 AMD 模块合并成一个文件.
这里主要介绍 Grunt 的一个 plugin 集合: <a href="https://github.com/backbone-boilerplate/grunt-bbb">Grunt-bbb</a></p>

<h2><a href="https://github.com/backbone-boilerplate/grunt-bbb">Grunt-bbb</a></h2>

<p>bbb 主要包含下面这些 tasks:</p>

<ul>
<li><code>init</code>
初始化一个空的项目模板.</li>
<li><code>lint</code>
确保所有的 js 文件符合 JSHint.</li>
<li><code>less</code>
编译 LESS 生成 css 文件.</li>
<li><code>mincss</code>
Minify 所有的 css 文件,并合并成一个 css 文件.</li>
<li><code>min</code>
grunt 内置 task, Minify js 文件.</li>
<li><code>concat</code>
合并多个文件到一个文件.</li>
<li><code>requirejs</code>
利用<code>r.js</code>合并<a href="http://requirejs.org/">RequireJS</a>模块到一个 js 文件.</li>
<li><code>server</code>
静态文件的 HTTP 服务, 用于开发调试.</li>
</ul>


<h3>安装</h3>

<p><code>bash
$ npm install -g bbb
</code></p>

<h3>新项目初始化</h3>

<p>进入空的项目目录,然后运行:</p>

<p><code>bash
$ bbb init
</code></p>

<p>根据命令行的提示输入相应的内容, 然后会生成一个空的 <code>grunt.js</code> 文件.</p>

<h3>目录结构</h3>

<p>bbb 要求按照如下目录结构组织源代码:</p>

<p><code>
|-app
   |-项目 js 文件
|-dist
   |-build生成的发布文件
|-assets
   |-require.js
   |-backbone.js
   |-underscore.js 等需要的 js 库文件
|-index.html
|-favicon.ico
</code></p>

<p>css 和 img 文件缺省目录在 <code>assets/</code> 目录中. 我们可以更改 <code>grunt.js</code> 来增加/更改/删除任务('task'), 以及更改任务的设置,
包括缺省目录.</p>

<!--more-->


<h2>在<a href="https://github.com/xiaocong/xiaocong.github.com/tree/source/source/examples/amd-backbone-contacts/">AMD Backbone Contacts</a>中增加<code>bbb</code>构建配置</h2>

<p><a href="/examples/amd-backbone-contacts/index.html">demo</a> 项目中没有对 js 文件进行任何优化, 下面就逐步修
改该项目来引入<code>bbb</code>进行项目构建和发布.</p>

<ul>
<li>修改项目目录结构, 来适应<code>bbb</code>的要求.</li>
</ul>


<p>主要的改动在于将<code>backbone</code>, <code>require</code>, <code>underscore</code>等库文件从<code>js/libs/</code>移动到<code>assets/js/</code>目录, 将
<code>js/</code>目录更名为<code>app/</code>, 将<code>templates/</code>和<code>css/</code>目录移动到<code>assets/</code>.</p>

<ul>
<li>增加<code>grunt.js</code>配置文件.</li>
</ul>


<p>可以用<code>bbb init</code>命令来生成缺省的<code>grunt.js</code>配置文件, <em>必须</em>包含下面的代码:
``` javascript
module.exports = function(grunt) {
  grunt.initConfig({</p>

<pre><code>//config options...
</code></pre>

<p>  });
};
<code>
- 在`grunt.js`配置选项中定义文件路径.
</code> javascript
  grunt.initConfig({</p>

<pre><code>//...
dirs: {
  debug: "dist/debug", // debug files under the folder
  release: "dist/release" // release files under the folder
},
//...
</code></pre>

<p>  });
<code>
- 在 `grunt.js` 配置选项中定义文件清理任务 `clean`.
</code> javascript
  grunt.initConfig({</p>

<pre><code>//...
clean: ["&lt;config:dirs.debug&gt;", "&lt;config:dirs.release&gt;"],
//...
</code></pre>

<p>  });
<code>
- 在`grunt.js`配置选项中定义 `lint` 任务, 确保所有在 `app/` 目录下的 `js` 文件都符合 `JSHint`.
</code> javascript
  grunt.initConfig({</p>

<pre><code>//...
lint: {
  beforeconcat: [
    "app/**/*.js"
  ],
  afterconcat: [
    "dist/debug/assets/js/require/require.js"
  ]
},
jshint: {
  options: {
    scripturl: true
  }
},
//...
</code></pre>

<p>  });
<code>``
*注:</code>lint:afterconcat<code>任务运行会报jQuery代码的错, 没有仔细调查原因, 因此在</code>concat<code>完成后没有调用</code>lint:afterconcat`任务.*</p>

<ul>
<li>在<code>grunt.js</code>配置选项中定义 <code>requirejs</code> 任务, 合并所有项目所需要的 js 文件到一个 <code>require.js</code> 文件(真正的
<code>assets/js/require/require.js</code>文件不会包含在这个输出文件中, 后面会用<code>concat</code>任务将真正的<code>require.js</code>合并进来).
``` javascript
grunt.initConfig({
  //...
  requirejs: {

<pre><code>// Include the main configuration file
mainConfigFile: "app/config.js",
// Output file
out: "dist/debug/assets/js/require/require.js",
// Root application module
name: "config",
// Do not wrap everything in an IIFE
wrap: false
</code></pre>

<p>  }
  //...
});
```</p></li>
<li>在<code>grunt.js</code>配置选项中定义<code>concat</code>任务, 将<code>require.js</code>库文件合并到<code>requirejs</code>任务的输出文件中去.
``` javascript
grunt.initConfig({
  //...
  concat: {

<pre><code>"dist/debug/assets/js/require/require.js": [
  "assets/js/require/require.js",
  "dist/debug/assets/js/require/require.js"
]
</code></pre>

<p>  },
  //...
});
```</p></li>
<li>在<code>grunt.js</code>配置选项中定义<code>min</code>任务, Minify <code>concat</code>任务生成的文件到<code>dist/release/assets/js/require/require.js</code>.
``` javascript
grunt.initConfig({
  //...
  min: {

<pre><code>"dist/release/assets/js/require/require.js": [
  "dist/debug/assets/js/require/require.js"
]
</code></pre>

<p>  },
  //...
});
```</p></li>
<li>在<code>grunt.js</code>配置选项中定义<code>mincss</code>任务, Minify所有的<code>css</code>文件到<code>dist/release/assets/css/index.css</code>.
``` javascript
grunt.initConfig({
  //...
  mincss: {

<pre><code>"dist/release/assets/css/index.css": [
  "assets/css/application.css"
]
</code></pre>

<p>  },
});
```</p></li>
<li>在<code>grunt.js</code>配置选项中定义<code>copy</code>任务, 复制相应的文件到<code>dist/debug/</code>或者<code>dist/release/</code>目录.
``` javascript
grunt.initConfig({
  //...
  copy: {

<pre><code>debug: {
  src: ["assets/css/**/*.css", "favicon.ico"],
  renames: {"index.noconfig.html": "index.html"},
  dest: "&lt;config:dirs.debug&gt;"
},
release: {
  src: ["favicon.ico"],
  renames: {"index.noconfig.html": "index.html"},
  dest: "&lt;config:dirs.release&gt;"
}
</code></pre>

<p>  },
  //...
});
<code>
`bbb`和`grunt`没有内置文件复制任务, 因此我们需要自己实现这个任务. 这里直接采用
[jquery-ui](https://github.com/jquery/jquery-ui/blob/master/grunt.js#L392)的实现.
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>copy  (copy.js)</span> <a href='/examples/bbb-amd-backbone-contacts/tasks/copy.js'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">// Copy multitask definition, copied from jquery grunt.js file.</span>
</span><span class='line'><span class="c1">// It takes src/dest/rename/strip params.</span>
</span><span class='line'><span class="nx">module</span><span class="p">.</span><span class="nx">exports</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">grunt</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">grunt</span><span class="p">.</span><span class="nx">registerMultiTask</span><span class="p">(</span> <span class="s2">&quot;copy&quot;</span><span class="p">,</span> <span class="s2">&quot;Copy files to destination folder and replace @VERSION with pkg.version&quot;</span><span class="p">,</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="kd">function</span> <span class="nx">replaceVersion</span><span class="p">(</span> <span class="nx">source</span> <span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="nx">source</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span> <span class="sr">/@VERSION/g</span><span class="p">,</span> <span class="nx">grunt</span><span class="p">.</span><span class="nx">config</span><span class="p">(</span> <span class="s2">&quot;pkg.version&quot;</span> <span class="p">)</span> <span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="kd">function</span> <span class="nx">copyFile</span><span class="p">(</span> <span class="nx">src</span><span class="p">,</span> <span class="nx">dest</span> <span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span> <span class="sr">/(js|css)$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span> <span class="nx">src</span> <span class="p">)</span> <span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">grunt</span><span class="p">.</span><span class="nx">file</span><span class="p">.</span><span class="nx">copy</span><span class="p">(</span> <span class="nx">src</span><span class="p">,</span> <span class="nx">dest</span><span class="p">,</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">process</span><span class="o">:</span> <span class="nx">replaceVersion</span>
</span><span class='line'>        <span class="p">});</span>
</span><span class='line'>      <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">grunt</span><span class="p">.</span><span class="nx">file</span><span class="p">.</span><span class="nx">copy</span><span class="p">(</span> <span class="nx">src</span><span class="p">,</span> <span class="nx">dest</span> <span class="p">);</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">files</span> <span class="o">=</span> <span class="nx">grunt</span><span class="p">.</span><span class="nx">file</span><span class="p">.</span><span class="nx">expandFiles</span><span class="p">(</span> <span class="k">this</span><span class="p">.</span><span class="nx">file</span><span class="p">.</span><span class="nx">src</span> <span class="p">),</span>
</span><span class='line'>      <span class="nx">target</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">file</span><span class="p">.</span><span class="nx">dest</span> <span class="o">+</span> <span class="s2">&quot;/&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">strip</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">.</span><span class="nx">strip</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">renameCount</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">fileName</span><span class="p">;</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span> <span class="k">typeof</span> <span class="nx">strip</span> <span class="o">===</span> <span class="s2">&quot;string&quot;</span> <span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">strip</span> <span class="o">=</span> <span class="k">new</span> <span class="nb">RegExp</span><span class="p">(</span> <span class="s2">&quot;^&quot;</span> <span class="o">+</span> <span class="nx">grunt</span><span class="p">.</span><span class="nx">template</span><span class="p">.</span><span class="nx">process</span><span class="p">(</span> <span class="nx">strip</span><span class="p">,</span> <span class="nx">grunt</span><span class="p">.</span><span class="nx">config</span><span class="p">()</span> <span class="p">).</span><span class="nx">replace</span><span class="p">(</span> <span class="sr">/[\-\[\]{}()*+?.,\\\^$|#\s]/g</span><span class="p">,</span> <span class="s2">&quot;\\$&amp;&quot;</span> <span class="p">)</span> <span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="nx">files</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span> <span class="nx">fileName</span> <span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="kd">var</span> <span class="nx">targetFile</span> <span class="o">=</span> <span class="nx">strip</span> <span class="o">?</span> <span class="nx">fileName</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span> <span class="nx">strip</span><span class="p">,</span> <span class="s2">&quot;&quot;</span> <span class="p">)</span> <span class="o">:</span> <span class="nx">fileName</span><span class="p">;</span>
</span><span class='line'>      <span class="nx">copyFile</span><span class="p">(</span> <span class="nx">fileName</span><span class="p">,</span> <span class="nx">target</span> <span class="o">+</span> <span class="nx">targetFile</span> <span class="p">);</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'>    <span class="nx">grunt</span><span class="p">.</span><span class="nx">log</span><span class="p">.</span><span class="nx">writeln</span><span class="p">(</span> <span class="s2">&quot;Copied &quot;</span> <span class="o">+</span> <span class="nx">files</span><span class="p">.</span><span class="nx">length</span> <span class="o">+</span> <span class="s2">&quot; files.&quot;</span> <span class="p">);</span>
</span><span class='line'>    <span class="k">for</span> <span class="p">(</span> <span class="nx">fileName</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">.</span><span class="nx">renames</span> <span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">renameCount</span> <span class="o">+=</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'>      <span class="nx">copyFile</span><span class="p">(</span> <span class="nx">fileName</span><span class="p">,</span> <span class="nx">target</span> <span class="o">+</span> <span class="nx">grunt</span><span class="p">.</span><span class="nx">template</span><span class="p">.</span><span class="nx">process</span><span class="p">(</span> <span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">.</span><span class="nx">renames</span><span class="p">[</span> <span class="nx">fileName</span> <span class="p">],</span> <span class="nx">grunt</span><span class="p">.</span><span class="nx">config</span><span class="p">()</span> <span class="p">)</span> <span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span> <span class="nx">renameCount</span> <span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">grunt</span><span class="p">.</span><span class="nx">log</span><span class="p">.</span><span class="nx">writeln</span><span class="p">(</span> <span class="s2">&quot;Renamed &quot;</span> <span class="o">+</span> <span class="nx">renameCount</span> <span class="o">+</span> <span class="s2">&quot; files.&quot;</span> <span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">});</span>
</span><span class='line'><span class="p">};</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
`grunt.js`配置文件中需要加载该任务:
</code> javascript
grunt.loadTasks("tasks");  //加载所有在'tasks/'目录下的<code>task</code>.
```</p></li>
<li><p>在<code>grunt.js</code>配置选项中定义<code>server</code>任务, 用于开发调试.
``` javascript
grunt.initConfig({
  //...
  server: {</p>

<pre><code>port: 8000,
base: ".",
folders: {
  "app": "app",
  "assets": "assets"
},
debug: {
  folders: {
    "app": "dist/debug",
    "assets": "dist/debug/assets",
    "": "dist/debug"
  }
},
release: {
  folders: {
    "app": "dist/release",
    "assets": "dist/release/assets",
    "": "dist/release"
  }
}
</code></pre>

<p>  },
  //...
});
```
这里定义了3个任务:</p></li>
<li><p><strong><code>server</code></strong>: 侦听并返回<code>.</code>目录下的文件, 这个服务不对 js 和 css 文件作任何 Minify 和 concat.</p></li>
<li><strong><code>server:debug</code></strong>: 侦听并返回<code>dist/debug/</code>目录下的文件.</li>
<li><p><strong><code>server:release</code></strong>: 侦听并返回<code>dist/release/</code>目录下的文件.</p></li>
<li><p>将上诉任务进行串接, 定义复合任务.
<code>javascript
grunt.registerTask("default", "clean lint:beforeconcat");
grunt.registerTask("debug", "default copy:debug requirejs concat");
grunt.registerTask("release", "debug copy:release mincss min");
</code></p></li>
<li><strong><code>default</code></strong>: 清除<code>dist/</code>目录, <code>lint</code> <code>app/</code>目录下的所有 js 文件.</li>
<li><strong><code>debug</code></strong>: 调用<code>default</code>任务, 复制相关文件到<code>dist/debug/</code>目录下, 合并 js(AMD模块) 文件, 最后合并<code>require.js</code>库文件.</li>
<li><strong><code>release</code></strong>: 调用<code>debug</code>任务, 复制相关文件到<code>dist/release/</code>目录下, Minify css 文件, Minify js 文件.</li>
</ul>


<p>至此, 所有的任务都已经定义完成. 下面是完整的<code>grunt.js</code>文件.
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>gruntfile  (grunt.js)</span> <a href='/examples/bbb-amd-backbone-contacts/grunt.js'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
<span class='line-number'>168</span>
<span class='line-number'>169</span>
<span class='line-number'>170</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">// This is the main application configuration file.  It is a Grunt</span>
</span><span class='line'><span class="c1">// configuration file, which you can learn more about here:</span>
</span><span class='line'><span class="c1">// https://github.com/cowboy/grunt/blob/master/docs/configuring.md</span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'><span class="nx">module</span><span class="p">.</span><span class="nx">exports</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">grunt</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">grunt</span><span class="p">.</span><span class="nx">initConfig</span><span class="p">({</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// define the debug/release directories for distribution.</span>
</span><span class='line'>    <span class="c1">// TODO, maybe remove it later. I don&#39;t like hardcode, but sometimes</span>
</span><span class='line'>    <span class="c1">// hardcode is more simple.</span>
</span><span class='line'>    <span class="nx">dirs</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">debug</span><span class="o">:</span> <span class="s2">&quot;dist/debug&quot;</span><span class="p">,</span> <span class="c1">// debug files under the folder</span>
</span><span class='line'>      <span class="nx">release</span><span class="o">:</span> <span class="s2">&quot;dist/release&quot;</span> <span class="c1">// release files under the folder</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// The clean task ensures all files are removed from the dist/ directory so</span>
</span><span class='line'>    <span class="c1">// that no files linger from previous builds.</span>
</span><span class='line'>    <span class="nx">clean</span><span class="o">:</span> <span class="p">[</span><span class="s2">&quot;&lt;config:dirs.debug&gt;&quot;</span><span class="p">,</span> <span class="s2">&quot;&lt;config:dirs.release&gt;&quot;</span><span class="p">],</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// The lint task will run the build configuration and the application</span>
</span><span class='line'>    <span class="c1">// JavaScript through JSHint and report any errors.  You can change the</span>
</span><span class='line'>    <span class="c1">// options for this task, by reading this:</span>
</span><span class='line'>    <span class="c1">// https://github.com/cowboy/grunt/blob/master/docs/task_lint.md</span>
</span><span class='line'>    <span class="nx">lint</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">beforeconcat</span><span class="o">:</span> <span class="p">[</span>
</span><span class='line'>        <span class="s2">&quot;app/**/*.js&quot;</span>
</span><span class='line'>      <span class="p">],</span>
</span><span class='line'>      <span class="nx">afterconcat</span><span class="o">:</span> <span class="p">[</span>
</span><span class='line'>        <span class="s2">&quot;dist/debug/assets/js/require/require.js&quot;</span>
</span><span class='line'>      <span class="p">]</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// The jshint option for scripturl is set to lax, because the anchor</span>
</span><span class='line'>    <span class="c1">// override inside main.js needs to test for them so as to not accidentally</span>
</span><span class='line'>    <span class="c1">// route.</span>
</span><span class='line'>    <span class="nx">jshint</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">options</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">scripturl</span><span class="o">:</span> <span class="kc">true</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// The copy task is to copy files from source to distribution directory.</span>
</span><span class='line'>    <span class="nx">copy</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">debug</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">src</span><span class="o">:</span> <span class="p">[</span><span class="s2">&quot;assets/css/**/*.css&quot;</span><span class="p">,</span> <span class="s2">&quot;favicon.ico&quot;</span><span class="p">],</span>
</span><span class='line'>        <span class="nx">renames</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="s2">&quot;index.noconfig.html&quot;</span><span class="o">:</span> <span class="s2">&quot;index.html&quot;</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>        <span class="nx">dest</span><span class="o">:</span> <span class="s2">&quot;&lt;config:dirs.debug&gt;&quot;</span>
</span><span class='line'>      <span class="p">},</span>
</span><span class='line'>      <span class="nx">release</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">src</span><span class="o">:</span> <span class="p">[</span><span class="s2">&quot;favicon.ico&quot;</span><span class="p">],</span>
</span><span class='line'>        <span class="nx">renames</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="s2">&quot;index.noconfig.html&quot;</span><span class="o">:</span> <span class="s2">&quot;index.html&quot;</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>        <span class="nx">dest</span><span class="o">:</span> <span class="s2">&quot;&lt;config:dirs.release&gt;&quot;</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// The concatenate task is used here to merge the require.js into the</span>
</span><span class='line'>    <span class="c1">// application code.  It&#39;s named dist/debug/assets/js/require/require.js,</span>
</span><span class='line'>    <span class="c1">//because we want to only load one script file in index.html.</span>
</span><span class='line'>    <span class="nx">concat</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="s2">&quot;dist/debug/assets/js/require/require.js&quot;</span><span class="o">:</span> <span class="p">[</span>
</span><span class='line'>        <span class="s2">&quot;assets/js/require/require.js&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;dist/debug/assets/js/require/require.js&quot;</span>
</span><span class='line'>      <span class="p">]</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// This task uses the MinCSS Node.js project to take all your CSS files in</span>
</span><span class='line'>    <span class="c1">// order and concatenate them into a single CSS file named index.css.  It</span>
</span><span class='line'>    <span class="c1">// also minifies all the CSS as well.  This is named index.css, because we</span>
</span><span class='line'>    <span class="c1">// only want to load one stylesheet in index.html.</span>
</span><span class='line'>    <span class="nx">mincss</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="s2">&quot;dist/release/assets/css/index.css&quot;</span><span class="o">:</span> <span class="p">[</span>
</span><span class='line'>        <span class="s2">&quot;assets/css/application.css&quot;</span>
</span><span class='line'>      <span class="p">]</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Takes the built require.js file and minifies it for filesize benefits.</span>
</span><span class='line'>    <span class="nx">min</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="s2">&quot;dist/release/assets/js/require/require.js&quot;</span><span class="o">:</span> <span class="p">[</span>
</span><span class='line'>        <span class="s2">&quot;dist/debug/assets/js/require/require.js&quot;</span>
</span><span class='line'>      <span class="p">]</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Running the server without specifying an action will run the defaults,</span>
</span><span class='line'>    <span class="c1">// port: 8080 and host: 127.0.0.1.  If you would like to change these</span>
</span><span class='line'>    <span class="c1">// defaults, simply add in the properties `port` and `host` respectively.</span>
</span><span class='line'>    <span class="c1">//</span>
</span><span class='line'>    <span class="c1">// Changing the defaults might look something like this:</span>
</span><span class='line'>    <span class="c1">//</span>
</span><span class='line'>    <span class="c1">// server: {</span>
</span><span class='line'>    <span class="c1">//   host: &quot;127.0.0.1&quot;, port: 9001</span>
</span><span class='line'>    <span class="c1">//   debug: { ... can set host and port here too ...</span>
</span><span class='line'>    <span class="c1">//  }</span>
</span><span class='line'>    <span class="c1">//</span>
</span><span class='line'>    <span class="c1">//  To learn more about using the server task, please refer to the code</span>
</span><span class='line'>    <span class="c1">//  until documentation has been written.</span>
</span><span class='line'>    <span class="c1">// Run below commands will cause:</span>
</span><span class='line'>    <span class="c1">// $ bbb server</span>
</span><span class='line'>    <span class="c1">//      Run server under . folder. It uses require.js to load all needed</span>
</span><span class='line'>    <span class="c1">//      js files, templates and css files.</span>
</span><span class='line'>    <span class="c1">// $ bbb server:debug</span>
</span><span class='line'>    <span class="c1">//      Run server under dist/debug folder. All js files are merged into one</span>
</span><span class='line'>    <span class="c1">//      require.js. Make sure you run &#39;bbb debug&#39; firstly.</span>
</span><span class='line'>    <span class="c1">// $ bbb server:debug</span>
</span><span class='line'>    <span class="c1">//      Run server under dist/release folder.</span>
</span><span class='line'>    <span class="c1">//      All js files are merged into one require.js and minized. All css</span>
</span><span class='line'>    <span class="c1">//      files are merged into one and minized.</span>
</span><span class='line'>    <span class="c1">//      Make sure you run &#39;bbb release&#39; firstly.</span>
</span><span class='line'>    <span class="nx">server</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">port</span><span class="o">:</span> <span class="mi">8000</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">base</span><span class="o">:</span> <span class="s2">&quot;.&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">folders</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s2">&quot;app&quot;</span><span class="o">:</span> <span class="s2">&quot;app&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;assets&quot;</span><span class="o">:</span> <span class="s2">&quot;assets&quot;</span>
</span><span class='line'>      <span class="p">},</span>
</span><span class='line'>      <span class="nx">debug</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">folders</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="s2">&quot;app&quot;</span><span class="o">:</span> <span class="s2">&quot;dist/debug&quot;</span><span class="p">,</span>
</span><span class='line'>          <span class="s2">&quot;assets&quot;</span><span class="o">:</span> <span class="s2">&quot;dist/debug/assets&quot;</span><span class="p">,</span>
</span><span class='line'>          <span class="s2">&quot;&quot;</span><span class="o">:</span> <span class="s2">&quot;dist/debug&quot;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>      <span class="p">},</span>
</span><span class='line'>      <span class="nx">release</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">folders</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="s2">&quot;app&quot;</span><span class="o">:</span> <span class="s2">&quot;dist/release&quot;</span><span class="p">,</span>
</span><span class='line'>          <span class="s2">&quot;assets&quot;</span><span class="o">:</span> <span class="s2">&quot;dist/release/assets&quot;</span><span class="p">,</span>
</span><span class='line'>          <span class="s2">&quot;&quot;</span><span class="o">:</span> <span class="s2">&quot;dist/release&quot;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// This task uses James Burke&#39;s excellent r.js AMD build tool.  In the</span>
</span><span class='line'>    <span class="c1">// future other builders may be contributed as drop-in alternatives.</span>
</span><span class='line'>    <span class="nx">requirejs</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="c1">// Include the main configuration file</span>
</span><span class='line'>      <span class="nx">mainConfigFile</span><span class="o">:</span> <span class="s2">&quot;app/config.js&quot;</span><span class="p">,</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1">// Output file</span>
</span><span class='line'>      <span class="nx">out</span><span class="o">:</span> <span class="s2">&quot;dist/debug/assets/js/require/require.js&quot;</span><span class="p">,</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1">// Root application module</span>
</span><span class='line'>      <span class="nx">name</span><span class="o">:</span> <span class="s2">&quot;config&quot;</span><span class="p">,</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1">// Do not wrap everything in an IIFE</span>
</span><span class='line'>      <span class="nx">wrap</span><span class="o">:</span> <span class="kc">false</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="p">});</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// load tasks from tasks/ folder.</span>
</span><span class='line'>  <span class="nx">grunt</span><span class="p">.</span><span class="nx">loadTasks</span><span class="p">(</span><span class="s2">&quot;tasks&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// The default task will remove all contents inside the dist/ folder, lint</span>
</span><span class='line'>  <span class="c1">// all your code.</span>
</span><span class='line'>  <span class="nx">grunt</span><span class="p">.</span><span class="nx">registerTask</span><span class="p">(</span><span class="s2">&quot;default&quot;</span><span class="p">,</span> <span class="s2">&quot;clean lint:beforeconcat&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// The debug task will remove all contents inside the dist/ folder, lint all</span>
</span><span class='line'>  <span class="c1">// js code under app/ folder, copy files to dist/debug folder, combine all</span>
</span><span class='line'>  <span class="c1">// application files into require.js, and then concat real require.js with</span>
</span><span class='line'>  <span class="c1">// the application require.js file.</span>
</span><span class='line'>  <span class="nx">grunt</span><span class="p">.</span><span class="nx">registerTask</span><span class="p">(</span><span class="s2">&quot;debug&quot;</span><span class="p">,</span> <span class="s2">&quot;default copy:debug requirejs concat&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// The release task will perform debug task, copy files to dist/release folder,</span>
</span><span class='line'>  <span class="c1">// minmize css file, and minimize require.js into dist/release.</span>
</span><span class='line'>  <span class="nx">grunt</span><span class="p">.</span><span class="nx">registerTask</span><span class="p">(</span><span class="s2">&quot;release&quot;</span><span class="p">,</span> <span class="s2">&quot;debug copy:release mincss min&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">};</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>运行</h2>

<ul>
<li><p>运行 HTTP 服务器于<a href="/examples/bbb-amd-backbone-contacts/index.html">开发版本</a>:
<code>javascript
$ bbb server
</code></p></li>
<li><p>发布文件到<code>dist/debug/</code>目录, 并运行 HTTP 服务器于 <a href="/examples/bbb-amd-backbone-contacts/dist/debug/index.html">debug 版本</a>:
<code>javascript
$ bbb debug
$ bbb server:debug
</code></p></li>
<li><p>发布文件到<code>dist/release/</code>目录, 并运行 HTTP 服务器于 <a href="/examples/bbb-amd-backbone-contacts/dist/release/index.html">release 版本</a>:
<code>javascript
$ bbb release
$ bbb server:release
</code></p></li>
</ul>


<p>这里可以查看所有的<strong><a href="https://github.com/xiaocong/xiaocong.github.com/tree/source/source/examples/bbb-amd-backbone-contacts/">源代码</a></strong>.</p>

<h2>参考</h2>

<ol>
<li><a href="http://requirejs.org/">RequireJS官方网站</a></li>
<li><a href="https://github.com/cowboy/grunt">Grunt.js</a></li>
<li><a href="https://github.com/backbone-boilerplate/grunt-bbb">bbb</a></li>
<li><a href="https://github.com/cowboy/grunt/blob/master/docs/api.md">Grunt API</a></li>
<li><a href="https://github.com/jquery/jquery-ui/blob/master/grunt.js">jQuery-ui自定义grunt任务</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[配合AMD/RequireJS使用Backbone.js]]></title>
    <link href="http://xiaocong.github.com/blog/2012/05/16/use-amd-and-backbone-together/"/>
    <updated>2012-05-16T14:23:00+08:00</updated>
    <id>http://xiaocong.github.com/blog/2012/05/16/use-amd-and-backbone-together</id>
    <content type="html"><![CDATA[<h2>为什么使用AMD/RequireJS?</h2>

<p>还记得C语言是怎么解决引用冲突的么?
``` c</p>

<h1>ifndef <em>MY_MODULE_H</em></h1>

<h1>define <em>MY_MODULE_H</em></h1>

<p>/<em>my code here</em>/</p>

<h1>endif  /<em><em>MY_MODULE_H</em></em>/</h1>

<p>```</p>

<p>Backbone解决的是将用户数据，页面显示，以及流程控制模块化，而AMD解决的是将不同功能的代码封装到小的代码单元，代码单元功能的注册，以及代码依赖。</p>

<p><blockquote><p>What are JavaScript modules? What is their purpose?<br/>- Definition: how to encapsulate a piece of code into a useful unit, and how to register its capability/export a value for the module.<br/>- Dependency References: how to refer to other units of code.</p></blockquote></p>

<h2>如何使用AMD/RequireJS?</h2>

<p>下面javascript代码定义了一个新的模块<code>module1</code>，其依赖<code>jquery</code>模块：</p>

<p>``` javascript module1.js
define('module1', ['jquery'] , function ($) {</p>

<pre><code>return function () {};
</code></pre>

<p>});
```</p>

<p><code>define</code>函数接受三个参数：</p>

<ul>
<li>第一个参数是个字符串，定义了本模块的名称，其他模块可以用这个名称来引用本模块曝露出来的对象；可以省略该参数，缺省以文件名来命名该模块；</li>
<li>第二个参数是个数组，定义了本模块需要引用的其他模块的列表，例如<code>jquery</code>或者其他用户自定义模块；</li>
<li>第三个参数是个函数，该函数的参数列表分别对应第二个参数里的模块列表曝露的对象；该函数的返回值即为本模块曝露的对象；</li>
</ul>


<p><a href="http://requirejs.org/" title="Require.js">官网</a>可以查到详细的说明和用例。</p>

<!--more-->


<h2>如何配合使用<a href="http://backbonejs.com/" title="Backbone.js">Backbone</a>和<a href="http://requirejs.org/" title="Require.js">RequireJS</a>?</h2>

<p>正式的Backbone和Underscore版本已经不再缺省支持AMD，不过我们有好几种方法可以在AMD中使用Backbone和Underscore。<a href="http://twitter.com/tbranyen">Tim Branyen</a>在他的博文 <a href="http://tbranyen.com/post/amdrequirejs-shim-plugin-for-loading-incompatible-javascript">AMD/RequireJS Shim Plugin for Loading Incompatible JavaScript</a> 中详细阐述了解决办法。下面的例子程序也是采用了Branyen推荐的方法。</p>

<h2>使用AMD/RequireJS重写Contacts例子程序</h2>

<ul>
<li>没有使用AMD/RequireJS的<a href="https://github.com/xiaocong/xiaocong.github.com/tree/source/source/examples/backbone-contacts/">源代码</a>和<a href="/examples/backbone-contacts/index.html">例子</a>；</li>
<li>使用AMD/RequireJS改写后的<a href="https://github.com/xiaocong/xiaocong.github.com/tree/source/source/examples/amd-backbone-contacts/">源代码</a>和<a href="/examples/amd-backbone-contacts/index.html">例子</a>。</li>
</ul>


<p>这里主要用到了AMD/RequireJS的以下模块插件：</p>

<ul>
<li><code>use</code>插件，用来引用<code>backbone</code>和<code>underscore</code>等非AMD兼容的javascript库。</li>
<li><code>text</code>插件，用来异步加载模板文本文件。</li>
</ul>


<p>下面是所有模块代码：</p>

<h3>Model: Contact</h3>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Contact  (contact.js)</span> <a href='/examples/amd-backbone-contacts/js/models/contact.js'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">define</span><span class="p">([</span>
</span><span class='line'>  <span class="s1">&#39;use!underscore&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="s1">&#39;use!backbone&#39;</span>
</span><span class='line'><span class="p">],</span> <span class="kd">function</span><span class="p">(</span><span class="nx">_</span><span class="p">,</span> <span class="nx">Backbone</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">Contact</span> <span class="o">=</span> <span class="nx">Backbone</span><span class="p">.</span><span class="nx">Model</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span>
</span><span class='line'>    <span class="nx">defaults</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">name</span><span class="o">:</span> <span class="s1">&#39;unamed&#39;</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">email</span><span class="o">:</span> <span class="s1">&#39;&#39;</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nx">filter</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">query</span><span class="p">)</span> <span class="p">{</span><span class="c1">//helper function for user search</span>
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span><span class="nx">query</span> <span class="o">===</span> <span class="kc">undefined</span> <span class="o">||</span> <span class="nx">query</span> <span class="o">===</span> <span class="kc">null</span> <span class="o">||</span> <span class="nx">query</span> <span class="o">===</span> <span class="s1">&#39;&#39;</span><span class="p">)</span> <span class="k">return</span> <span class="kc">true</span><span class="p">;</span>
</span><span class='line'>      <span class="nx">query</span> <span class="o">=</span> <span class="nx">query</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">();</span>
</span><span class='line'>      <span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;name&#39;</span><span class="p">).</span><span class="nx">toLowerCase</span><span class="p">().</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">query</span><span class="p">)</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span> <span class="o">||</span> <span class="k">this</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;email&#39;</span><span class="p">).</span><span class="nx">toLowerCase</span><span class="p">().</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">query</span><span class="p">)</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">});</span>
</span><span class='line'>  <span class="k">return</span> <span class="nx">Contact</span><span class="p">;</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<ul>
<li><em>这里<code>Contact</code>模块返回的是<code>Contact</code>定义，而不是一个实例，引用该对象的其他模块必须通过<code>new</code>生成实例对象。</em></li>
</ul>


<h3>Collection: Contacts</h3>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Contacts  (contacts.js)</span> <a href='/examples/amd-backbone-contacts/js/collections/contacts.js'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">define</span><span class="p">([</span>
</span><span class='line'>  <span class="s1">&#39;use!underscore&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="s1">&#39;use!backbone&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="s1">&#39;models/contact&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="s1">&#39;store&#39;</span>
</span><span class='line'><span class="p">],</span> <span class="kd">function</span><span class="p">(</span><span class="nx">_</span><span class="p">,</span> <span class="nx">Backbone</span><span class="p">,</span> <span class="nx">Contact</span><span class="p">,</span> <span class="nx">Store</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">Contacts</span> <span class="o">=</span> <span class="nx">Backbone</span><span class="p">.</span><span class="nx">Collection</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span>
</span><span class='line'>    <span class="nx">model</span><span class="o">:</span> <span class="nx">Contact</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">localStorage</span><span class="o">:</span> <span class="k">new</span> <span class="nx">Store</span><span class="p">(</span><span class="s1">&#39;my-contacts&#39;</span><span class="p">)</span>
</span><span class='line'>  <span class="p">});</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">return</span> <span class="k">new</span> <span class="nx">Contacts</span><span class="p">();</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<ul>
<li><em>与<code>Contact</code>返回定义不同的是，因为该网页应用只需要一个全局<code>Contacts</code>实例对象，因此这里可以返回<code>new</code>生成的<code>Contacts</code>实例对象。</em></li>
<li><em>通过<code>models/contact</code>来引用<code>Contact</code>定义。</em></li>
</ul>


<h3>View: ContactItem</h3>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>ContactItemView  (contactitem.js)</span> <a href='/examples/amd-backbone-contacts/js/views/contactitem.js'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">define</span><span class="p">([</span>
</span><span class='line'>  <span class="s1">&#39;jquery&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="s1">&#39;use!underscore&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="s1">&#39;use!backbone&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="s1">&#39;namespace&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="s1">&#39;text!templates/item.html&#39;</span>
</span><span class='line'><span class="p">],</span> <span class="kd">function</span><span class="p">(</span><span class="nx">$</span><span class="p">,</span> <span class="nx">_</span><span class="p">,</span> <span class="nx">Backbone</span><span class="p">,</span> <span class="nx">global</span><span class="p">,</span> <span class="nx">tplItem</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="c1">// contact item view</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">ContactItemView</span> <span class="o">=</span> <span class="nx">Backbone</span><span class="p">.</span><span class="nx">View</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span>
</span><span class='line'>    <span class="nx">className</span><span class="o">:</span> <span class="s1">&#39;item&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">template</span><span class="o">:</span> <span class="nx">_</span><span class="p">.</span><span class="nx">template</span><span class="p">(</span><span class="nx">tplItem</span><span class="p">),</span>
</span><span class='line'>    <span class="nx">events</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="s1">&#39;click&#39;</span><span class="o">:</span> <span class="s1">&#39;select&#39;</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="c1">// initialize</span>
</span><span class='line'>    <span class="nx">initialize</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">_</span><span class="p">.</span><span class="nx">bindAll</span><span class="p">(</span><span class="k">this</span><span class="p">,</span> <span class="s1">&#39;select&#39;</span><span class="p">);</span>
</span><span class='line'>      <span class="k">this</span><span class="p">.</span><span class="nx">model</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="s1">&#39;reset&#39;</span><span class="p">,</span> <span class="k">this</span><span class="p">.</span><span class="nx">render</span><span class="p">,</span> <span class="k">this</span><span class="p">);</span>
</span><span class='line'>      <span class="k">this</span><span class="p">.</span><span class="nx">model</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="s1">&#39;change&#39;</span><span class="p">,</span> <span class="k">this</span><span class="p">.</span><span class="nx">render</span><span class="p">,</span> <span class="k">this</span><span class="p">);</span>
</span><span class='line'>      <span class="k">this</span><span class="p">.</span><span class="nx">model</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="s1">&#39;destroy&#39;</span><span class="p">,</span> <span class="k">this</span><span class="p">.</span><span class="nx">remove</span><span class="p">,</span> <span class="k">this</span><span class="p">);</span>
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">model</span><span class="p">.</span><span class="nx">view</span><span class="p">)</span> <span class="k">this</span><span class="p">.</span><span class="nx">model</span><span class="p">.</span><span class="nx">view</span><span class="p">.</span><span class="nx">remove</span><span class="p">();</span>
</span><span class='line'>      <span class="k">this</span><span class="p">.</span><span class="nx">model</span><span class="p">.</span><span class="nx">view</span> <span class="o">=</span> <span class="k">this</span><span class="p">;</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="c1">// render the contact item</span>
</span><span class='line'>    <span class="nx">render</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">this</span><span class="p">.</span><span class="nx">$el</span><span class="p">.</span><span class="nx">html</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">template</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">model</span><span class="p">.</span><span class="nx">toJSON</span><span class="p">()));</span>
</span><span class='line'>      <span class="k">return</span> <span class="k">this</span><span class="p">;</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nx">select</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span><span class="nx">global</span><span class="p">.</span><span class="nx">app</span> <span class="o">&amp;&amp;</span> <span class="nx">global</span><span class="p">.</span><span class="nx">app</span><span class="p">.</span><span class="nx">router</span><span class="p">)</span>
</span><span class='line'>        <span class="nx">global</span><span class="p">.</span><span class="nx">app</span><span class="p">.</span><span class="nx">router</span><span class="p">.</span><span class="nx">navigate</span><span class="p">(</span><span class="s1">&#39;contacts/&#39;</span> <span class="o">+</span> <span class="k">this</span><span class="p">.</span><span class="nx">model</span><span class="p">.</span><span class="nx">cid</span><span class="p">,</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">trigger</span><span class="o">:</span> <span class="kc">true</span>
</span><span class='line'>        <span class="p">});</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nx">active</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">this</span><span class="p">.</span><span class="nx">$el</span><span class="p">.</span><span class="nx">addClass</span><span class="p">(</span><span class="s1">&#39;active&#39;</span><span class="p">);</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nx">deactive</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">this</span><span class="p">.</span><span class="nx">$el</span><span class="p">.</span><span class="nx">removeClass</span><span class="p">(</span><span class="s1">&#39;active&#39;</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">});</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">return</span> <span class="nx">ContactItemView</span><span class="p">;</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<ul>
<li><em>返回<code>ContactItemView</code>定义。</em></li>
<li><em>使用了<code>templates/item.html</code>模板进行页面渲染。</em></li>
</ul>


<h4>item template</h4>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Contact Item View Template (item.html)</span> <a href='/examples/amd-backbone-contacts/templates/item.html'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="err">&lt;</span>%= (name ? name : &quot;<span class="nt">&lt;i&gt;</span>No Name<span class="nt">&lt;/i&gt;</span>&quot;) %&gt;
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h3>View: Sidebar</h3>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>SidebarView  (contactitem.js)</span> <a href='/examples/amd-backbone-contacts/js/views/contactitem.js'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">define</span><span class="p">([</span>
</span><span class='line'>  <span class="s1">&#39;jquery&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="s1">&#39;use!underscore&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="s1">&#39;use!backbone&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="s1">&#39;namespace&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="s1">&#39;text!templates/item.html&#39;</span>
</span><span class='line'><span class="p">],</span> <span class="kd">function</span><span class="p">(</span><span class="nx">$</span><span class="p">,</span> <span class="nx">_</span><span class="p">,</span> <span class="nx">Backbone</span><span class="p">,</span> <span class="nx">global</span><span class="p">,</span> <span class="nx">tplItem</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="c1">// contact item view</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">ContactItemView</span> <span class="o">=</span> <span class="nx">Backbone</span><span class="p">.</span><span class="nx">View</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span>
</span><span class='line'>    <span class="nx">className</span><span class="o">:</span> <span class="s1">&#39;item&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">template</span><span class="o">:</span> <span class="nx">_</span><span class="p">.</span><span class="nx">template</span><span class="p">(</span><span class="nx">tplItem</span><span class="p">),</span>
</span><span class='line'>    <span class="nx">events</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="s1">&#39;click&#39;</span><span class="o">:</span> <span class="s1">&#39;select&#39;</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="c1">// initialize</span>
</span><span class='line'>    <span class="nx">initialize</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">_</span><span class="p">.</span><span class="nx">bindAll</span><span class="p">(</span><span class="k">this</span><span class="p">,</span> <span class="s1">&#39;select&#39;</span><span class="p">);</span>
</span><span class='line'>      <span class="k">this</span><span class="p">.</span><span class="nx">model</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="s1">&#39;reset&#39;</span><span class="p">,</span> <span class="k">this</span><span class="p">.</span><span class="nx">render</span><span class="p">,</span> <span class="k">this</span><span class="p">);</span>
</span><span class='line'>      <span class="k">this</span><span class="p">.</span><span class="nx">model</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="s1">&#39;change&#39;</span><span class="p">,</span> <span class="k">this</span><span class="p">.</span><span class="nx">render</span><span class="p">,</span> <span class="k">this</span><span class="p">);</span>
</span><span class='line'>      <span class="k">this</span><span class="p">.</span><span class="nx">model</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="s1">&#39;destroy&#39;</span><span class="p">,</span> <span class="k">this</span><span class="p">.</span><span class="nx">remove</span><span class="p">,</span> <span class="k">this</span><span class="p">);</span>
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">model</span><span class="p">.</span><span class="nx">view</span><span class="p">)</span> <span class="k">this</span><span class="p">.</span><span class="nx">model</span><span class="p">.</span><span class="nx">view</span><span class="p">.</span><span class="nx">remove</span><span class="p">();</span>
</span><span class='line'>      <span class="k">this</span><span class="p">.</span><span class="nx">model</span><span class="p">.</span><span class="nx">view</span> <span class="o">=</span> <span class="k">this</span><span class="p">;</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="c1">// render the contact item</span>
</span><span class='line'>    <span class="nx">render</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">this</span><span class="p">.</span><span class="nx">$el</span><span class="p">.</span><span class="nx">html</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">template</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">model</span><span class="p">.</span><span class="nx">toJSON</span><span class="p">()));</span>
</span><span class='line'>      <span class="k">return</span> <span class="k">this</span><span class="p">;</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nx">select</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span><span class="nx">global</span><span class="p">.</span><span class="nx">app</span> <span class="o">&amp;&amp;</span> <span class="nx">global</span><span class="p">.</span><span class="nx">app</span><span class="p">.</span><span class="nx">router</span><span class="p">)</span>
</span><span class='line'>        <span class="nx">global</span><span class="p">.</span><span class="nx">app</span><span class="p">.</span><span class="nx">router</span><span class="p">.</span><span class="nx">navigate</span><span class="p">(</span><span class="s1">&#39;contacts/&#39;</span> <span class="o">+</span> <span class="k">this</span><span class="p">.</span><span class="nx">model</span><span class="p">.</span><span class="nx">cid</span><span class="p">,</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">trigger</span><span class="o">:</span> <span class="kc">true</span>
</span><span class='line'>        <span class="p">});</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nx">active</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">this</span><span class="p">.</span><span class="nx">$el</span><span class="p">.</span><span class="nx">addClass</span><span class="p">(</span><span class="s1">&#39;active&#39;</span><span class="p">);</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nx">deactive</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">this</span><span class="p">.</span><span class="nx">$el</span><span class="p">.</span><span class="nx">removeClass</span><span class="p">(</span><span class="s1">&#39;active&#39;</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">});</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">return</span> <span class="nx">ContactItemView</span><span class="p">;</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<ul>
<li><em>返回<code>SidebarView</code>全局实例对象。</em></li>
<li><em>引用了<code>Contacts</code>全局实例对象，以及<code>Contact</code>和<code>ContactItemView</code>定义。</em></li>
<li><em>使用了<code>templates/sidebar.html</code>模板进行页面渲染。</em></li>
</ul>


<h4>sidebar template</h4>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Sidebar View Template (sidebar.html)</span> <a href='/examples/amd-backbone-contacts/templates/sidebar.html'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;header&gt;</span>
</span><span class='line'>  <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">&quot;search&quot;</span> <span class="na">placeholder=</span><span class="s">&quot;search&quot;</span> <span class="na">results=</span><span class="s">&quot;0&quot;</span> <span class="na">incremental=</span><span class="s">&quot;true&quot;</span> <span class="na">autofocus</span><span class="nt">&gt;</span>
</span><span class='line'><span class="nt">&lt;/header&gt;</span>
</span><span class='line'><span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;items&quot;</span><span class="nt">&gt;&lt;/div&gt;</span>
</span><span class='line'><span class="nt">&lt;footer&gt;</span>
</span><span class='line'>  <span class="nt">&lt;button&gt;</span>New Contact<span class="nt">&lt;/button&gt;</span>
</span><span class='line'><span class="nt">&lt;/footer&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h3>View: Edit, Show 和 Main</h3>

<h4><code>ShowView</code>用于显示选中<code>Contact</code>的详细内容：</h4>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>ShowView  (show.js)</span> <a href='/examples/amd-backbone-contacts/js/views/show.js'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">define</span><span class="p">([</span>
</span><span class='line'>  <span class="s1">&#39;jquery&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="s1">&#39;use!underscore&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="s1">&#39;use!backbone&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="s1">&#39;namespace&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="s1">&#39;text!templates/show.html&#39;</span>
</span><span class='line'><span class="p">],</span> <span class="kd">function</span><span class="p">(</span><span class="nx">$</span><span class="p">,</span> <span class="nx">_</span><span class="p">,</span> <span class="nx">Backbone</span><span class="p">,</span> <span class="nx">global</span><span class="p">,</span> <span class="nx">tplShow</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="c1">// show selected contact details</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">ShowView</span> <span class="o">=</span> <span class="nx">Backbone</span><span class="p">.</span><span class="nx">View</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span>
</span><span class='line'>    <span class="nx">className</span><span class="o">:</span> <span class="s1">&#39;show&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">template</span><span class="o">:</span> <span class="nx">_</span><span class="p">.</span><span class="nx">template</span><span class="p">(</span><span class="nx">tplShow</span><span class="p">),</span>
</span><span class='line'>    <span class="nx">events</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="s1">&#39;click .edit&#39;</span><span class="o">:</span> <span class="s1">&#39;edit&#39;</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nx">initialize</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">_</span><span class="p">.</span><span class="nx">bindAll</span><span class="p">(</span><span class="k">this</span><span class="p">,</span> <span class="s1">&#39;edit&#39;</span><span class="p">);</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nx">render</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">item</span><span class="p">)</span>
</span><span class='line'>        <span class="k">this</span><span class="p">.</span><span class="nx">$el</span><span class="p">.</span><span class="nx">html</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">template</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">item</span><span class="p">.</span><span class="nx">toJSON</span><span class="p">()));</span>
</span><span class='line'>      <span class="k">else</span>
</span><span class='line'>        <span class="k">this</span><span class="p">.</span><span class="nx">$el</span><span class="p">.</span><span class="nx">html</span><span class="p">(</span><span class="s1">&#39;&#39;</span><span class="p">);</span>
</span><span class='line'>      <span class="k">return</span> <span class="k">this</span><span class="p">;</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nx">change</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">item</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">this</span><span class="p">.</span><span class="nx">item</span> <span class="o">=</span> <span class="nx">item</span><span class="p">;</span>
</span><span class='line'>      <span class="k">this</span><span class="p">.</span><span class="nx">render</span><span class="p">();</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nx">edit</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">item</span> <span class="o">&amp;&amp;</span> <span class="nx">global</span><span class="p">.</span><span class="nx">app</span> <span class="o">&amp;&amp;</span> <span class="nx">global</span><span class="p">.</span><span class="nx">app</span><span class="p">.</span><span class="nx">router</span><span class="p">)</span>
</span><span class='line'>        <span class="nx">global</span><span class="p">.</span><span class="nx">app</span><span class="p">.</span><span class="nx">router</span><span class="p">.</span><span class="nx">navigate</span><span class="p">(</span><span class="s1">&#39;contacts/&#39;</span> <span class="o">+</span> <span class="k">this</span><span class="p">.</span><span class="nx">item</span><span class="p">.</span><span class="nx">cid</span> <span class="o">+</span> <span class="s1">&#39;/edit&#39;</span><span class="p">,</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">trigger</span><span class="o">:</span> <span class="kc">true</span>
</span><span class='line'>        <span class="p">});</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">});</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">return</span> <span class="k">new</span> <span class="nx">ShowView</span><span class="p">();</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<ul>
<li><em>返回<code>ShowView</code>全局实例对象。</em></li>
<li><em>使用了<code>templates/show.html</code>模板进行页面渲染。</em></li>
</ul>


<h5>show template</h5>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Show View Template (show.html)</span> <a href='/examples/amd-backbone-contacts/templates/show.html'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;header&gt;</span>
</span><span class='line'>  <span class="nt">&lt;a</span> <span class="na">class=</span><span class="s">&quot;edit&quot;</span><span class="nt">&gt;</span>Edit<span class="nt">&lt;/a&gt;</span>
</span><span class='line'><span class="nt">&lt;/header&gt;</span>
</span><span class='line'><span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;content&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;p&gt;&lt;label&gt;</span>name: <span class="err">&lt;</span>%= name %&gt;<span class="nt">&lt;/label&gt;&lt;/p&gt;</span>
</span><span class='line'>  <span class="nt">&lt;p&gt;&lt;label&gt;</span>email: <span class="err">&lt;</span>%= email %&gt;<span class="nt">&lt;/label&gt;&lt;/p&gt;</span>
</span><span class='line'><span class="nt">&lt;/div&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h4><code>EditView</code>用于编辑选中<code>Contact</code>的详细内容：</h4>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>EditView  (edit.js)</span> <a href='/examples/amd-backbone-contacts/js/views/edit.js'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">define</span><span class="p">([</span>
</span><span class='line'>  <span class="s1">&#39;jquery&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="s1">&#39;use!underscore&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="s1">&#39;use!backbone&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="s1">&#39;namespace&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="s1">&#39;text!templates/edit.html&#39;</span>
</span><span class='line'><span class="p">],</span> <span class="kd">function</span><span class="p">(</span><span class="nx">$</span><span class="p">,</span> <span class="nx">_</span><span class="p">,</span> <span class="nx">Backbone</span><span class="p">,</span> <span class="nx">global</span><span class="p">,</span> <span class="nx">tplEdit</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="c1">// edit selected contact</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">EditView</span> <span class="o">=</span> <span class="nx">Backbone</span><span class="p">.</span><span class="nx">View</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span>
</span><span class='line'>    <span class="nx">className</span><span class="o">:</span> <span class="s1">&#39;edit&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">template</span><span class="o">:</span> <span class="nx">_</span><span class="p">.</span><span class="nx">template</span><span class="p">(</span><span class="nx">tplEdit</span><span class="p">),</span>
</span><span class='line'>    <span class="nx">events</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="s1">&#39;submit form&#39;</span><span class="o">:</span> <span class="s1">&#39;submit&#39;</span><span class="p">,</span>
</span><span class='line'>      <span class="s1">&#39;click .save&#39;</span><span class="o">:</span> <span class="s1">&#39;submit&#39;</span><span class="p">,</span>
</span><span class='line'>      <span class="s1">&#39;click .delete&#39;</span><span class="o">:</span> <span class="s1">&#39;remove&#39;</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nx">initialize</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">_</span><span class="p">.</span><span class="nx">bindAll</span><span class="p">(</span><span class="k">this</span><span class="p">,</span> <span class="s1">&#39;submit&#39;</span><span class="p">,</span> <span class="s1">&#39;remove&#39;</span><span class="p">);</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nx">render</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">item</span><span class="p">)</span> <span class="k">this</span><span class="p">.</span><span class="nx">$el</span><span class="p">.</span><span class="nx">html</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">template</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">item</span><span class="p">.</span><span class="nx">toJSON</span><span class="p">()));</span>
</span><span class='line'>      <span class="k">return</span> <span class="k">this</span><span class="p">;</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nx">change</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">item</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">this</span><span class="p">.</span><span class="nx">item</span> <span class="o">=</span> <span class="nx">item</span><span class="p">;</span>
</span><span class='line'>      <span class="k">this</span><span class="p">.</span><span class="nx">render</span><span class="p">();</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nx">submit</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">this</span><span class="p">.</span><span class="nx">item</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">form</span><span class="p">());</span>
</span><span class='line'>      <span class="k">this</span><span class="p">.</span><span class="nx">item</span><span class="p">.</span><span class="nx">save</span><span class="p">();</span>
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span><span class="nx">global</span><span class="p">.</span><span class="nx">app</span> <span class="o">&amp;&amp;</span> <span class="nx">global</span><span class="p">.</span><span class="nx">app</span><span class="p">.</span><span class="nx">router</span><span class="p">)</span>
</span><span class='line'>        <span class="nx">global</span><span class="p">.</span><span class="nx">app</span><span class="p">.</span><span class="nx">router</span><span class="p">.</span><span class="nx">navigate</span><span class="p">(</span><span class="s1">&#39;contacts/&#39;</span> <span class="o">+</span> <span class="k">this</span><span class="p">.</span><span class="nx">item</span><span class="p">.</span><span class="nx">cid</span><span class="p">,</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">trigger</span><span class="o">:</span> <span class="kc">true</span>
</span><span class='line'>        <span class="p">});</span>
</span><span class='line'>      <span class="k">return</span> <span class="kc">false</span><span class="p">;</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nx">form</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">name</span><span class="o">:</span> <span class="k">this</span><span class="p">.</span><span class="nx">$</span><span class="p">(</span><span class="s1">&#39;form [name=&quot;name&quot;]&#39;</span><span class="p">).</span><span class="nx">val</span><span class="p">(),</span>
</span><span class='line'>        <span class="nx">email</span><span class="o">:</span> <span class="k">this</span><span class="p">.</span><span class="nx">$</span><span class="p">(</span><span class="s1">&#39;form [name=&quot;email&quot;]&#39;</span><span class="p">).</span><span class="nx">val</span><span class="p">()</span>
</span><span class='line'>      <span class="p">};</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nx">remove</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">this</span><span class="p">.</span><span class="nx">item</span><span class="p">.</span><span class="nx">destroy</span><span class="p">();</span>
</span><span class='line'>      <span class="k">this</span><span class="p">.</span><span class="nx">item</span> <span class="o">=</span> <span class="kc">null</span><span class="p">;</span>
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span><span class="nx">global</span><span class="p">.</span><span class="nx">app</span> <span class="o">&amp;&amp;</span> <span class="nx">global</span><span class="p">.</span><span class="nx">app</span><span class="p">.</span><span class="nx">router</span><span class="p">)</span>
</span><span class='line'>        <span class="nx">global</span><span class="p">.</span><span class="nx">app</span><span class="p">.</span><span class="nx">router</span><span class="p">.</span><span class="nx">navigate</span><span class="p">(</span><span class="s1">&#39;&#39;</span><span class="p">,</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">trigger</span><span class="o">:</span> <span class="kc">true</span>
</span><span class='line'>        <span class="p">});</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">});</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">return</span> <span class="k">new</span> <span class="nx">EditView</span><span class="p">();</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<ul>
<li><em>返回<code>EditView</code>全局实例对象。</em></li>
<li><em>使用了<code>templates/edit.html</code>模板进行页面渲染。</em></li>
</ul>


<h5>edit template</h5>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Edit View Template (edit.html)</span> <a href='/examples/amd-backbone-contacts/templates/edit.html'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;header&gt;</span>
</span><span class='line'>  <span class="nt">&lt;a</span> <span class="na">class=</span><span class="s">&quot;save&quot;</span><span class="nt">&gt;</span>Save<span class="nt">&lt;/a&gt;</span>
</span><span class='line'>  <span class="nt">&lt;a</span> <span class="na">class=</span><span class="s">&quot;delete&quot;</span><span class="nt">&gt;</span>Delete<span class="nt">&lt;/a&gt;</span>
</span><span class='line'><span class="nt">&lt;/header&gt;</span>
</span><span class='line'><span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;content&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;form&gt;</span>
</span><span class='line'>    <span class="nt">&lt;label&gt;</span>
</span><span class='line'>      <span class="nt">&lt;span&gt;</span>Name<span class="nt">&lt;/span&gt;</span>
</span><span class='line'>      <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">&quot;text&quot;</span> <span class="na">name=</span><span class="s">&quot;name&quot;</span> <span class="na">value=</span><span class="s">&quot;&lt;%= name %&gt;&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/label&gt;</span>
</span><span class='line'>    <span class="nt">&lt;label&gt;</span>
</span><span class='line'>      <span class="nt">&lt;span&gt;</span>Email<span class="nt">&lt;/span&gt;</span>
</span><span class='line'>      <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">&quot;email&quot;</span> <span class="na">name=</span><span class="s">&quot;email&quot;</span> <span class="na">value=</span><span class="s">&quot;&lt;%= email %&gt;&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/label&gt;</span>
</span><span class='line'>    <span class="nt">&lt;button&gt;</span>Save<span class="nt">&lt;/button&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/form&gt;</span>
</span><span class='line'><span class="nt">&lt;/div&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h4><code>MainView</code>是<code>ShowView</code>和<code>EditView</code>的容器：</h4>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>EditView  (main.js)</span> <a href='/examples/amd-backbone-contacts/js/views/main.js'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">define</span><span class="p">([</span>
</span><span class='line'>  <span class="s1">&#39;jquery&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="s1">&#39;use!underscore&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="s1">&#39;use!backbone&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="s1">&#39;views/show&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="s1">&#39;views/edit&#39;</span>
</span><span class='line'><span class="p">],</span> <span class="kd">function</span><span class="p">(</span><span class="nx">$</span><span class="p">,</span> <span class="nx">_</span><span class="p">,</span> <span class="nx">Backbone</span><span class="p">,</span> <span class="nx">showView</span><span class="p">,</span> <span class="nx">editView</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="c1">// main view for show and view</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">MainView</span> <span class="o">=</span> <span class="nx">Backbone</span><span class="p">.</span><span class="nx">View</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span>
</span><span class='line'>    <span class="nx">className</span><span class="o">:</span> <span class="s1">&#39;main stack&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">initialize</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">this</span><span class="p">.</span><span class="nx">editView</span> <span class="o">=</span> <span class="nx">editView</span><span class="p">;</span>
</span><span class='line'>      <span class="k">this</span><span class="p">.</span><span class="nx">showView</span> <span class="o">=</span> <span class="nx">showView</span><span class="p">;</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nx">render</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">this</span><span class="p">.</span><span class="nx">$el</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">showView</span><span class="p">.</span><span class="nx">render</span><span class="p">().</span><span class="nx">el</span><span class="p">);</span>
</span><span class='line'>      <span class="k">this</span><span class="p">.</span><span class="nx">$el</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">editView</span><span class="p">.</span><span class="nx">render</span><span class="p">().</span><span class="nx">el</span><span class="p">);</span>
</span><span class='line'>      <span class="k">return</span> <span class="k">this</span><span class="p">;</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nx">edit</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">item</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">this</span><span class="p">.</span><span class="nx">showView</span><span class="p">.</span><span class="nx">$el</span><span class="p">.</span><span class="nx">removeClass</span><span class="p">(</span><span class="s1">&#39;active&#39;</span><span class="p">);</span>
</span><span class='line'>      <span class="k">this</span><span class="p">.</span><span class="nx">editView</span><span class="p">.</span><span class="nx">$el</span><span class="p">.</span><span class="nx">addClass</span><span class="p">(</span><span class="s1">&#39;active&#39;</span><span class="p">);</span>
</span><span class='line'>      <span class="k">this</span><span class="p">.</span><span class="nx">editView</span><span class="p">.</span><span class="nx">change</span><span class="p">(</span><span class="nx">item</span><span class="p">);</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nx">show</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">item</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">this</span><span class="p">.</span><span class="nx">editView</span><span class="p">.</span><span class="nx">$el</span><span class="p">.</span><span class="nx">removeClass</span><span class="p">(</span><span class="s1">&#39;active&#39;</span><span class="p">);</span>
</span><span class='line'>      <span class="k">this</span><span class="p">.</span><span class="nx">showView</span><span class="p">.</span><span class="nx">$el</span><span class="p">.</span><span class="nx">addClass</span><span class="p">(</span><span class="s1">&#39;active&#39;</span><span class="p">);</span>
</span><span class='line'>      <span class="k">this</span><span class="p">.</span><span class="nx">showView</span><span class="p">.</span><span class="nx">change</span><span class="p">(</span><span class="nx">item</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">});</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">return</span> <span class="k">new</span> <span class="nx">MainView</span><span class="p">();</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<ul>
<li><em>返回<code>MainView</code>全局实例对象，其功能就是根据用户的操作，显示<code>ShowView</code>或者<code>EditView</code>。</em></li>
</ul>


<h3>View: App</h3>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>AppView  (app.js)</span> <a href='/examples/amd-backbone-contacts/js/views/app.js'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">define</span><span class="p">([</span>
</span><span class='line'>  <span class="s1">&#39;jquery&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="s1">&#39;use!underscore&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="s1">&#39;use!backbone&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="s1">&#39;views/sidebar&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="s1">&#39;views/main&#39;</span>
</span><span class='line'><span class="p">],</span> <span class="kd">function</span><span class="p">(</span><span class="nx">$</span><span class="p">,</span> <span class="nx">_</span><span class="p">,</span> <span class="nx">Backbone</span><span class="p">,</span> <span class="nx">sidebarView</span><span class="p">,</span> <span class="nx">mainView</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">AppView</span> <span class="o">=</span> <span class="nx">Backbone</span><span class="p">.</span><span class="nx">View</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span>
</span><span class='line'>    <span class="nx">className</span><span class="o">:</span> <span class="s1">&#39;contacts&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">initialize</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">this</span><span class="p">.</span><span class="nx">sidebar</span> <span class="o">=</span> <span class="nx">sidebarView</span><span class="p">;</span>
</span><span class='line'>      <span class="k">this</span><span class="p">.</span><span class="nx">main</span> <span class="o">=</span> <span class="nx">mainView</span><span class="p">;</span>
</span><span class='line'>      <span class="k">this</span><span class="p">.</span><span class="nx">vdiv</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;&lt;div /&gt;&#39;</span><span class="p">).</span><span class="nx">addClass</span><span class="p">(</span><span class="s1">&#39;vdivide&#39;</span><span class="p">);</span>
</span><span class='line'>      <span class="k">this</span><span class="p">.</span><span class="nx">render</span><span class="p">();</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nx">render</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">this</span><span class="p">.</span><span class="nx">$el</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">sidebar</span><span class="p">.</span><span class="nx">render</span><span class="p">().</span><span class="nx">el</span><span class="p">);</span>
</span><span class='line'>      <span class="k">this</span><span class="p">.</span><span class="nx">$el</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">vdiv</span><span class="p">);</span>
</span><span class='line'>      <span class="k">this</span><span class="p">.</span><span class="nx">$el</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">main</span><span class="p">.</span><span class="nx">render</span><span class="p">().</span><span class="nx">el</span><span class="p">);</span>
</span><span class='line'>      <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;#article&#39;</span><span class="p">).</span><span class="nx">append</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">el</span><span class="p">);</span>
</span><span class='line'>      <span class="k">return</span> <span class="k">this</span><span class="p">;</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nx">show</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">item</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">this</span><span class="p">.</span><span class="nx">sidebar</span><span class="p">.</span><span class="nx">active</span><span class="p">(</span><span class="nx">item</span><span class="p">);</span>
</span><span class='line'>      <span class="k">this</span><span class="p">.</span><span class="nx">main</span><span class="p">.</span><span class="nx">show</span><span class="p">(</span><span class="nx">item</span><span class="p">);</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nx">edit</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">item</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">this</span><span class="p">.</span><span class="nx">sidebar</span><span class="p">.</span><span class="nx">active</span><span class="p">(</span><span class="nx">item</span><span class="p">);</span>
</span><span class='line'>      <span class="k">this</span><span class="p">.</span><span class="nx">main</span><span class="p">.</span><span class="nx">edit</span><span class="p">(</span><span class="nx">item</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">});</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">return</span> <span class="k">new</span> <span class="nx">AppView</span><span class="p">();</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<ul>
<li><em>返回全局<code>AppView</code>全局实例对象，包含有<code>SidebarView</code>和<code>MainView</code>。</em></li>
</ul>


<h3>namespace</h3>

<p>全局实例对象，用于存放所有的全局定义和实例对象，同时扩展了<code>Backbone.Events</code>的功能，可以提供模块间的pub/sub服务。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>AppView  (namespace.js)</span> <a href='/examples/amd-backbone-contacts/js/namespace.js'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">define</span><span class="p">([</span>
</span><span class='line'>  <span class="s1">&#39;use!underscore&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="s1">&#39;use!backbone&#39;</span><span class="p">,</span>
</span><span class='line'><span class="p">],</span> <span class="kd">function</span><span class="p">(</span><span class="nx">_</span><span class="p">,</span> <span class="nx">Backbone</span><span class="p">){</span>
</span><span class='line'>  <span class="c1">//Context to store global variable.</span>
</span><span class='line'>  <span class="c1">// It also provides the pubsub service for other modules.</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">global</span> <span class="o">=</span> <span class="p">{};</span>
</span><span class='line'>  <span class="nx">_</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="nx">global</span><span class="p">,</span> <span class="nx">Backbone</span><span class="p">.</span><span class="nx">Events</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">return</span> <span class="nx">global</span><span class="p">;</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h3>store</h3>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>AppView  (store.js)</span> <a href='/examples/amd-backbone-contacts/js/store.js'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">// Filename: store.js</span>
</span><span class='line'><span class="nx">define</span><span class="p">([</span>
</span><span class='line'>  <span class="s1">&#39;use!underscore&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="s1">&#39;use!backbone&#39;</span>
</span><span class='line'><span class="p">],</span> <span class="kd">function</span><span class="p">(</span><span class="nx">_</span><span class="p">,</span> <span class="nx">Backbone</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="c1">// A simple module to replace `Backbone.sync` with *localStorage*-based</span>
</span><span class='line'>  <span class="c1">// persistence. Models are given GUIDS, and saved into a JSON object. Simple</span>
</span><span class='line'>  <span class="c1">// as that.</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// Generate four random hex digits.</span>
</span><span class='line'>  <span class="kd">function</span> <span class="nx">S4</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>     <span class="k">return</span> <span class="p">(((</span><span class="mi">1</span><span class="o">+</span><span class="nb">Math</span><span class="p">.</span><span class="nx">random</span><span class="p">())</span><span class="o">*</span><span class="mh">0x10000</span><span class="p">)</span><span class="o">|</span><span class="mi">0</span><span class="p">).</span><span class="nx">toString</span><span class="p">(</span><span class="mi">16</span><span class="p">).</span><span class="nx">substring</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// Generate a pseudo-GUID by concatenating random hexadecimal.</span>
</span><span class='line'>  <span class="kd">function</span> <span class="nx">guid</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>     <span class="k">return</span> <span class="p">(</span><span class="nx">S4</span><span class="p">()</span><span class="o">+</span><span class="nx">S4</span><span class="p">()</span><span class="o">+</span><span class="s2">&quot;-&quot;</span><span class="o">+</span><span class="nx">S4</span><span class="p">()</span><span class="o">+</span><span class="s2">&quot;-&quot;</span><span class="o">+</span><span class="nx">S4</span><span class="p">()</span><span class="o">+</span><span class="s2">&quot;-&quot;</span><span class="o">+</span><span class="nx">S4</span><span class="p">()</span><span class="o">+</span><span class="s2">&quot;-&quot;</span><span class="o">+</span><span class="nx">S4</span><span class="p">()</span><span class="o">+</span><span class="nx">S4</span><span class="p">()</span><span class="o">+</span><span class="nx">S4</span><span class="p">());</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// Our Store is represented by a single JS object in *localStorage*. Create it</span>
</span><span class='line'>  <span class="c1">// with a meaningful name, like the name you&#39;d give a table.</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">Store</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">name</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">this</span><span class="p">.</span><span class="nx">name</span> <span class="o">=</span> <span class="nx">name</span><span class="p">;</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">store</span> <span class="o">=</span> <span class="nx">localStorage</span><span class="p">.</span><span class="nx">getItem</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="p">);</span>
</span><span class='line'>    <span class="k">this</span><span class="p">.</span><span class="nx">data</span> <span class="o">=</span> <span class="p">(</span><span class="nx">store</span> <span class="o">&amp;&amp;</span> <span class="nx">JSON</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="nx">store</span><span class="p">))</span> <span class="o">||</span> <span class="p">{};</span>
</span><span class='line'>  <span class="p">};</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">_</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="nx">Store</span><span class="p">.</span><span class="nx">prototype</span><span class="p">,</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Save the current state of the **Store** to *localStorage*.</span>
</span><span class='line'>    <span class="nx">save</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">localStorage</span><span class="p">.</span><span class="nx">setItem</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="p">,</span> <span class="nx">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">));</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Add a model, giving it a (hopefully)-unique GUID, if it doesn&#39;t already</span>
</span><span class='line'>    <span class="c1">// have an id of it&#39;s own.</span>
</span><span class='line'>    <span class="nx">create</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">model</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">model</span><span class="p">.</span><span class="nx">id</span><span class="p">)</span> <span class="nx">model</span><span class="p">.</span><span class="nx">id</span> <span class="o">=</span> <span class="nx">model</span><span class="p">.</span><span class="nx">attributes</span><span class="p">.</span><span class="nx">id</span> <span class="o">=</span> <span class="nx">guid</span><span class="p">();</span>
</span><span class='line'>      <span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">[</span><span class="nx">model</span><span class="p">.</span><span class="nx">id</span><span class="p">]</span> <span class="o">=</span> <span class="nx">model</span><span class="p">;</span>
</span><span class='line'>      <span class="k">this</span><span class="p">.</span><span class="nx">save</span><span class="p">();</span>
</span><span class='line'>      <span class="k">return</span> <span class="nx">model</span><span class="p">;</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Update a model by replacing its copy in `this.data`.</span>
</span><span class='line'>    <span class="nx">update</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">model</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">[</span><span class="nx">model</span><span class="p">.</span><span class="nx">id</span><span class="p">]</span> <span class="o">=</span> <span class="nx">model</span><span class="p">;</span>
</span><span class='line'>      <span class="k">this</span><span class="p">.</span><span class="nx">save</span><span class="p">();</span>
</span><span class='line'>      <span class="k">return</span> <span class="nx">model</span><span class="p">;</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Retrieve a model from `this.data` by id.</span>
</span><span class='line'>    <span class="nx">find</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">model</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">[</span><span class="nx">model</span><span class="p">.</span><span class="nx">id</span><span class="p">];</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Return the array of all models currently in storage.</span>
</span><span class='line'>    <span class="nx">findAll</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="nx">_</span><span class="p">.</span><span class="nx">values</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">);</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Delete a model from `this.data`, returning it.</span>
</span><span class='line'>    <span class="nx">destroy</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">model</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">delete</span> <span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">[</span><span class="nx">model</span><span class="p">.</span><span class="nx">id</span><span class="p">];</span>
</span><span class='line'>      <span class="k">this</span><span class="p">.</span><span class="nx">save</span><span class="p">();</span>
</span><span class='line'>      <span class="k">return</span> <span class="nx">model</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="p">});</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// Override `Backbone.sync` to use delegate to the model or collection&#39;s</span>
</span><span class='line'>  <span class="c1">// *localStorage* property, which should be an instance of `Store`.</span>
</span><span class='line'>  <span class="nx">Backbone</span><span class="p">.</span><span class="nx">sync</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">method</span><span class="p">,</span> <span class="nx">model</span><span class="p">,</span> <span class="nx">options</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">resp</span><span class="p">;</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">store</span> <span class="o">=</span> <span class="nx">model</span><span class="p">.</span><span class="nx">localStorage</span> <span class="o">||</span> <span class="nx">model</span><span class="p">.</span><span class="nx">collection</span><span class="p">.</span><span class="nx">localStorage</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">switch</span> <span class="p">(</span><span class="nx">method</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">case</span> <span class="s2">&quot;read&quot;</span><span class="o">:</span>    <span class="nx">resp</span> <span class="o">=</span> <span class="nx">model</span><span class="p">.</span><span class="nx">id</span> <span class="o">?</span> <span class="nx">store</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="nx">model</span><span class="p">)</span> <span class="o">:</span> <span class="nx">store</span><span class="p">.</span><span class="nx">findAll</span><span class="p">();</span> <span class="k">break</span><span class="p">;</span>
</span><span class='line'>      <span class="k">case</span> <span class="s2">&quot;create&quot;</span><span class="o">:</span>  <span class="nx">resp</span> <span class="o">=</span> <span class="nx">store</span><span class="p">.</span><span class="nx">create</span><span class="p">(</span><span class="nx">model</span><span class="p">);</span>                            <span class="k">break</span><span class="p">;</span>
</span><span class='line'>      <span class="k">case</span> <span class="s2">&quot;update&quot;</span><span class="o">:</span>  <span class="nx">resp</span> <span class="o">=</span> <span class="nx">store</span><span class="p">.</span><span class="nx">update</span><span class="p">(</span><span class="nx">model</span><span class="p">);</span>                            <span class="k">break</span><span class="p">;</span>
</span><span class='line'>      <span class="k">case</span> <span class="s2">&quot;delete&quot;</span><span class="o">:</span>  <span class="nx">resp</span> <span class="o">=</span> <span class="nx">store</span><span class="p">.</span><span class="nx">destroy</span><span class="p">(</span><span class="nx">model</span><span class="p">);</span>                           <span class="k">break</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="nx">resp</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">options</span><span class="p">.</span><span class="nx">success</span><span class="p">(</span><span class="nx">resp</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">options</span><span class="p">.</span><span class="nx">error</span><span class="p">(</span><span class="s2">&quot;Record not found&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">};</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">return</span> <span class="nx">Store</span><span class="p">;</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<ul>
<li><em>返回本地存储<code>Store</code>定义。</em></li>
</ul>


<h3>router</h3>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>AppView  (router.js)</span> <a href='/examples/amd-backbone-contacts/js/router.js'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">// Filename: router.js</span>
</span><span class='line'><span class="nx">define</span><span class="p">([</span>
</span><span class='line'>  <span class="s1">&#39;jquery&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="s1">&#39;use!underscore&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="s1">&#39;use!backbone&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="s1">&#39;collections/contacts&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="s1">&#39;views/app&#39;</span>
</span><span class='line'><span class="p">],</span> <span class="kd">function</span><span class="p">(</span><span class="nx">$</span><span class="p">,</span> <span class="nx">_</span><span class="p">,</span> <span class="nx">Backbone</span><span class="p">,</span> <span class="nx">contacts</span><span class="p">,</span> <span class="nx">appView</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="c1">//Router</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">AppRouter</span> <span class="o">=</span> <span class="nx">Backbone</span><span class="p">.</span><span class="nx">Router</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span>
</span><span class='line'>    <span class="nx">routes</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="s1">&#39;&#39;</span><span class="o">:</span> <span class="s1">&#39;show&#39;</span><span class="p">,</span>
</span><span class='line'>      <span class="s1">&#39;contacts/:id&#39;</span><span class="o">:</span> <span class="s1">&#39;show&#39;</span><span class="p">,</span>
</span><span class='line'>      <span class="s1">&#39;contacts/:id/edit&#39;</span><span class="o">:</span> <span class="s1">&#39;edit&#39;</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>    <span class="nx">show</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">id</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">appView</span><span class="p">.</span><span class="nx">show</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">getContact</span><span class="p">(</span><span class="nx">id</span><span class="p">));</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nx">edit</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">id</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">appView</span><span class="p">.</span><span class="nx">edit</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">getContact</span><span class="p">(</span><span class="nx">id</span><span class="p">));</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nx">getContact</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">id</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span><span class="nx">id</span> <span class="o">===</span> <span class="kc">undefined</span> <span class="o">||</span> <span class="nx">id</span> <span class="o">===</span> <span class="kc">null</span><span class="p">)</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="nx">contacts</span><span class="p">.</span><span class="nx">length</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span>
</span><span class='line'>          <span class="k">return</span> <span class="nx">contacts</span><span class="p">.</span><span class="nx">at</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span>
</span><span class='line'>      <span class="k">return</span> <span class="nx">contacts</span><span class="p">.</span><span class="nx">getByCid</span><span class="p">(</span><span class="nx">id</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">});</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">return</span> <span class="k">new</span> <span class="nx">AppRouter</span><span class="p">();</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<ul>
<li><em>返回全局<code>AppRouter</code>实例对象，提供客户端的页面内路由，并将页面内路由绑定到对应的事件响应函数。</em></li>
</ul>


<h3>app</h3>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>AppView  (app.js)</span> <a href='/examples/amd-backbone-contacts/js/app.js'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">// Filename: app.js</span>
</span><span class='line'><span class="nx">define</span><span class="p">([</span>
</span><span class='line'>  <span class="s1">&#39;jquery&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="s1">&#39;use!underscore&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="s1">&#39;use!backbone&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="s1">&#39;collections/contacts&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="s1">&#39;router&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="s1">&#39;views/app&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="s1">&#39;namespace&#39;</span>
</span><span class='line'><span class="p">],</span> <span class="kd">function</span><span class="p">(</span><span class="nx">$</span><span class="p">,</span> <span class="nx">_</span><span class="p">,</span> <span class="nx">Backbone</span><span class="p">,</span> <span class="nx">contacts</span><span class="p">,</span> <span class="nx">appRouter</span><span class="p">,</span> <span class="nx">appView</span><span class="p">,</span> <span class="nx">global</span><span class="p">){</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">initialize</span> <span class="o">=</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1">// assign global variable</span>
</span><span class='line'>    <span class="nx">global</span><span class="p">.</span><span class="nx">app</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">contacts</span> <span class="o">:</span> <span class="nx">contacts</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">router</span> <span class="o">:</span> <span class="nx">appRouter</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">view</span> <span class="o">:</span> <span class="nx">appView</span>
</span><span class='line'>    <span class="p">};</span>
</span><span class='line'>    <span class="c1">// fetch data</span>
</span><span class='line'>    <span class="nx">contacts</span><span class="p">.</span><span class="nx">fetch</span><span class="p">();</span>
</span><span class='line'>    <span class="c1">//start</span>
</span><span class='line'>    <span class="nx">Backbone</span><span class="p">.</span><span class="nx">history</span><span class="p">.</span><span class="nx">start</span><span class="p">();</span>
</span><span class='line'>  <span class="p">};</span>
</span><span class='line'>  <span class="k">return</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">initialize</span><span class="o">:</span> <span class="nx">initialize</span>
</span><span class='line'>  <span class="p">};</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<ul>
<li><em>返回全局初始化函数，供初始化javascript脚本调用。</em></li>
</ul>


<h3>main</h3>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>AppView  (main.js)</span> <a href='/examples/amd-backbone-contacts/js/main.js'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">// Filename: main.js</span>
</span><span class='line'><span class="nx">require</span><span class="p">([</span>
</span><span class='line'>  <span class="s1">&#39;app&#39;</span>
</span><span class='line'><span class="p">],</span> <span class="kd">function</span><span class="p">(</span><span class="nx">app</span><span class="p">){</span>
</span><span class='line'>  <span class="c1">// The &quot;app&quot; dependency is passed in as &quot;App&quot;</span>
</span><span class='line'>  <span class="c1">// Again, the other dependencies passed in are not &quot;AMD&quot; therefore don&#39;t pass a parameter to this function</span>
</span><span class='line'>  <span class="nx">app</span><span class="p">.</span><span class="nx">initialize</span><span class="p">();</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<ul>
<li><em>这里用到了<code>require</code>，而不是模块定义所用的<code>define</code>。</em></li>
<li><em>异步加载<code>App</code>实例对象，并运行<code>App</code>对象的初始化函数，开始整个应用程序的执行。</em></li>
</ul>


<h3>config</h3>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>AppView  (config.js)</span> <a href='/examples/amd-backbone-contacts/js/config.js'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">// Require.js allows us to configure shortcut alias</span>
</span><span class='line'><span class="c1">// Their usage will become more apparent futher along in the tutorial.</span>
</span><span class='line'><span class="nx">require</span><span class="p">.</span><span class="nx">config</span><span class="p">({</span>
</span><span class='line'>  <span class="c1">// Initialize the application with the main application file</span>
</span><span class='line'>  <span class="nx">deps</span><span class="o">:</span> <span class="p">[</span><span class="s2">&quot;main&quot;</span><span class="p">],</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">paths</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1">// JavaScript folders</span>
</span><span class='line'>    <span class="nx">libs</span><span class="o">:</span> <span class="s2">&quot;libs&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="c1">// Libraries</span>
</span><span class='line'>    <span class="nx">jquery</span><span class="o">:</span> <span class="s1">&#39;libs/jquery/1.7.2/jquery&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">underscore</span><span class="o">:</span> <span class="s1">&#39;libs/underscore/1.3.2/underscore&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">backbone</span><span class="o">:</span> <span class="s1">&#39;libs/backbone/0.9.2/backbone&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="c1">// requirejs plugins</span>
</span><span class='line'>    <span class="nx">text</span><span class="o">:</span> <span class="s1">&#39;libs/require/plugins/text&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">use</span><span class="o">:</span> <span class="s1">&#39;libs/require/plugins/use&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">order</span><span class="o">:</span> <span class="s1">&#39;libs/require/plugins/order&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="c1">//template</span>
</span><span class='line'>    <span class="nx">templates</span><span class="o">:</span> <span class="s1">&#39;../templates&#39;</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">use</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">backbone</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">deps</span><span class="o">:</span> <span class="p">[</span><span class="s2">&quot;use!underscore&quot;</span><span class="p">,</span> <span class="s2">&quot;jquery&quot;</span><span class="p">],</span>
</span><span class='line'>      <span class="nx">attach</span><span class="o">:</span> <span class="s2">&quot;Backbone&quot;</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>    <span class="nx">underscore</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">attach</span><span class="o">:</span> <span class="s2">&quot;_&quot;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<ul>
<li><em>AMD配置文件，定义了用到的javascript库及其对应路径，包含<code>Backbone</code>的插件库。</em></li>
<li><em><code>deps</code>定义了需要用<code>main.js</code>来初始化应用。</em></li>
</ul>


<h3>index.html</h3>

<p>在<code>index.html</code>中只需要一个javascript加载语句：
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>AppView  (index.html)</span> <a href='/examples/amd-backbone-contacts/index.html'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="o">&lt;!</span><span class="nx">DOCTYPE</span> <span class="nx">html</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="nx">html</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="nx">head</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="nx">meta</span> <span class="nx">charset</span><span class="o">=</span><span class="nx">utf</span><span class="o">-</span><span class="mi">8</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="nx">title</span><span class="o">&gt;</span><span class="nx">App</span><span class="o">&lt;</span><span class="err">/title&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="nx">link</span> <span class="nx">rel</span><span class="o">=</span><span class="s2">&quot;stylesheet&quot;</span> <span class="nx">href</span><span class="o">=</span><span class="s2">&quot;css/application.css&quot;</span> <span class="nx">type</span><span class="o">=</span><span class="s2">&quot;text/css&quot;</span> <span class="nx">charset</span><span class="o">=</span><span class="s2">&quot;utf-8&quot;</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="nx">script</span> <span class="nx">data</span><span class="o">-</span><span class="nx">main</span><span class="o">=</span><span class="s2">&quot;js/config&quot;</span> <span class="nx">src</span><span class="o">=</span><span class="s2">&quot;js/libs/require/require.js&quot;</span><span class="o">&gt;&lt;</span><span class="err">/script&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/head&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="nx">body</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="nx">header</span> <span class="nx">id</span><span class="o">=</span><span class="s2">&quot;header&quot;</span><span class="o">&gt;&lt;</span><span class="nx">h1</span><span class="o">&gt;</span><span class="nx">AMD</span><span class="o">-</span><span class="nx">Backbone</span> <span class="nx">Contacts</span><span class="o">&lt;</span><span class="err">/h1&gt;&lt;/header&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="nx">article</span> <span class="nx">id</span><span class="o">=</span><span class="s2">&quot;article&quot;</span><span class="o">&gt;&lt;</span><span class="err">/article&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/body&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/html&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>关于AMD/RequireJS的一些思考</h2>

<p>AMD/RequireJS是按照模块之间的依赖关系进行异步加载。程序开发人员根据需求来定义依赖的模块，以及本模块的实现，而不用过多操心依赖的模块是否已经加载，加载执行顺序由AMD/RequireJS来保证。</p>

<p>在正常的依赖关系下，如<code>A</code>依赖于<code>B</code>，<code>B</code>依赖于<code>C</code>，那么模块执行的先后顺序是<code>C</code>-><code>B</code>-><code>A</code>。但是记住一点，这里讲的是模块初始化过程中的加载执行顺序，并不涉及到用户操作过程中的模块依赖关系。上诉例子中，可能出现<code>C</code>的用户事件响应函数需要访问<code>A</code>的数据，但是只要这个用户事件响应不是在模块初始化过程中发生的，我们就不能认为<code>C</code>依赖于<code>A</code>。模块初始化过程中的加载执行顺序肯定是不能出现循环依赖，否则就是死循环。</p>

<p>为了解决上诉例子中<code>C</code>的用户事件响应函数需要访问<code>A</code>的数据的问题，我们可以引人一个全局对象模块<code>namespace</code>。当模块<code>A</code>完成初始化之后，将自身对象注册到这个<code>namespace</code>中；<code>namespace</code>是一个被动对象，其在初始化过程中不依赖任何其他对象，而所有其他模块都可以依赖于<code>namespace</code>；当初始化完成后，<code>C</code>可以通过<code>namespace</code>访问到<code>A</code>。</p>

<p>在地址本例子中，<code>namespace</code>就是一个全局对象模块；因为模块依赖定义中，<code>AppRouter</code>依赖于<code>AppView</code>，而<code>AppView</code>的依赖模块<code>EditView</code>，<code>ShowView</code>和<code>SidebarView</code>需要能访问<code>AppRouter</code>对象；通过<code>namespace</code>全局对象模块，任何模块都可以运行时访问<code>AppRouter</code>对象。当然，我们也可以通过<code>namespace</code>，使得初始化过程中<code>AppRouter</code>和<code>AppView</code>没有依赖关系。</p>

<p><em>在浏览器中这个<code>namespace</code>可以是<code>window</code>对象或其子对象。</em></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用backbone.js重写spine的contact例子]]></title>
    <link href="http://xiaocong.github.com/blog/2012/05/10/rewrite-contacts-with-backbone-dot-js/"/>
    <updated>2012-05-10T12:22:00+08:00</updated>
    <id>http://xiaocong.github.com/blog/2012/05/10/rewrite-contacts-with-backbone-dot-js</id>
    <content type="html"><![CDATA[<p>相对于传统的服务器端动态页面技术，<a href="http://en.wikipedia.org/wiki/Single-page_application" title="Single-page application">SPA</a>(单页面应用)在浏览器端实现了所有的页面逻辑，避免了页面跳转而造成的操作中断，提供更为平滑的用户体验。要实现<a href="http://en.wikipedia.org/wiki/Single-page_application" title="Single-page application">SPA</a>，浏览器端必然需要一个javascript库来管理数据模块，用户操作，以及界面刷新，类似于服务器端MVC结构。在<a href="http://en.wikipedia.org/wiki/Single-page_application" title="Single-page application">这里</a>可以找到目前流行的浏览器端类MVC实现。</p>

<p>前些日子先后学习了<a href="http://backbonejs.com/" title="Backbone.js">Backbone</a>和<a href="http://spinejs.com/" title="Spine.js">Spine</a>，并参阅了双方的不少例子程序，其中包括<a href="http://spinejs.com/" title="Spine.js">Spine</a>实现的Spine.Contacts(<a href="http://spine-contacts.herokuapp.com/" title="Demo">demo</a>, <a href="https://github.com/maccman/spine.contacts" title="GitHub">source</a>)。为了更好地理解<a href="http://backbonejs.com/" title="Backbone.js">Backbone</a>的原理，就利用空闲时间使用<a href="http://backbonejs.com/" title="Backbone.js">Backbone</a>重写了该地址本应用(<a href="/examples/backbone-contacts/index.html">demo</a>, <a href="https://github.com/xiaocong/xiaocong.github.com/tree/source/source/examples/backbone-contacts/">source</a>)。</p>

<!--more-->


<p>在使用<a href="http://backbonejs.com/" title="Backbone.js">Backbone</a>的过程中，对其的总体感觉是能让页面逻辑层次更清楚，与传统的服务器端MVC结构非常类似：</p>

<ul>
<li>通过将View的方法绑定到Model/Collection的CRUD事件，可以让数据的变化能自动触发页面的更新；</li>
<li>一个View可以由多个相同或者不同类型的子View聚合而成，所有View都提供render函数供父View的render函数进行调用，所有View对象的聚合就生成了整个页面dom；</li>
<li>View通过HTML template，将绑定的Model渲染成dom元素，从某种程度上说，View更像MVC结构里的Controller；</li>
<li>Collection是Model的集合，紧密耦合了<a href="http://documentcloud.github.com/underscore/" title="Underscore.js">Underscore</a>的所有方法，相对传统javascript语句，提供了更加便捷的集合数据的运算；</li>
<li>Router提供了全局的页面逻辑路由，任何用户的操作，都可以通过<a href="http://documentcloud.github.com/backbone/#Router-navigate">Router.navigate</a>进行全局状态的跳转；</li>
<li><a href="http://backbonejs.com/" title="Backbone.js">Backbone</a>内置支持了$函数，如果页面包含有<a href="http://jquery.org/">jQuery</a>或者<a href="http://zeptojs.com/">Zepto</a>；</li>
<li>用户可以通过Sync函数，来绑定页面Model和服务器端RESTful接口提供的数据；</li>
</ul>


<p>下面是重写的地址本应用的全部javascript代码，也可以上<a href="https://github.com/xiaocong/xiaocong.github.com/tree/source/source/examples/backbone-contacts/">github</a>查看所有的源代码(<a href="/examples/backbone-contacts/index.html">演示</a>)：
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span> (application.js)</span> <a href='/examples/backbone-contacts/js/application.js'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
<span class='line-number'>168</span>
<span class='line-number'>169</span>
<span class='line-number'>170</span>
<span class='line-number'>171</span>
<span class='line-number'>172</span>
<span class='line-number'>173</span>
<span class='line-number'>174</span>
<span class='line-number'>175</span>
<span class='line-number'>176</span>
<span class='line-number'>177</span>
<span class='line-number'>178</span>
<span class='line-number'>179</span>
<span class='line-number'>180</span>
<span class='line-number'>181</span>
<span class='line-number'>182</span>
<span class='line-number'>183</span>
<span class='line-number'>184</span>
<span class='line-number'>185</span>
<span class='line-number'>186</span>
<span class='line-number'>187</span>
<span class='line-number'>188</span>
<span class='line-number'>189</span>
<span class='line-number'>190</span>
<span class='line-number'>191</span>
<span class='line-number'>192</span>
<span class='line-number'>193</span>
<span class='line-number'>194</span>
<span class='line-number'>195</span>
<span class='line-number'>196</span>
<span class='line-number'>197</span>
<span class='line-number'>198</span>
<span class='line-number'>199</span>
<span class='line-number'>200</span>
<span class='line-number'>201</span>
<span class='line-number'>202</span>
<span class='line-number'>203</span>
<span class='line-number'>204</span>
<span class='line-number'>205</span>
<span class='line-number'>206</span>
<span class='line-number'>207</span>
<span class='line-number'>208</span>
<span class='line-number'>209</span>
<span class='line-number'>210</span>
<span class='line-number'>211</span>
<span class='line-number'>212</span>
<span class='line-number'>213</span>
<span class='line-number'>214</span>
<span class='line-number'>215</span>
<span class='line-number'>216</span>
<span class='line-number'>217</span>
<span class='line-number'>218</span>
<span class='line-number'>219</span>
<span class='line-number'>220</span>
<span class='line-number'>221</span>
<span class='line-number'>222</span>
<span class='line-number'>223</span>
<span class='line-number'>224</span>
<span class='line-number'>225</span>
<span class='line-number'>226</span>
<span class='line-number'>227</span>
<span class='line-number'>228</span>
<span class='line-number'>229</span>
<span class='line-number'>230</span>
<span class='line-number'>231</span>
<span class='line-number'>232</span>
<span class='line-number'>233</span>
<span class='line-number'>234</span>
<span class='line-number'>235</span>
<span class='line-number'>236</span>
<span class='line-number'>237</span>
<span class='line-number'>238</span>
<span class='line-number'>239</span>
<span class='line-number'>240</span>
<span class='line-number'>241</span>
<span class='line-number'>242</span>
<span class='line-number'>243</span>
<span class='line-number'>244</span>
<span class='line-number'>245</span>
<span class='line-number'>246</span>
<span class='line-number'>247</span>
<span class='line-number'>248</span>
<span class='line-number'>249</span>
<span class='line-number'>250</span>
<span class='line-number'>251</span>
<span class='line-number'>252</span>
<span class='line-number'>253</span>
<span class='line-number'>254</span>
<span class='line-number'>255</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">$</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">$</span><span class="p">(</span><span class="nb">document</span><span class="p">).</span><span class="nx">ready</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">Contact</span> <span class="o">=</span> <span class="nx">Backbone</span><span class="p">.</span><span class="nx">Model</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span>
</span><span class='line'>      <span class="nx">defaults</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">name</span><span class="o">:</span> <span class="s1">&#39;&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">email</span><span class="o">:</span> <span class="s1">&#39;&#39;</span>
</span><span class='line'>      <span class="p">},</span>
</span><span class='line'>      <span class="nx">filter</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">query</span><span class="p">)</span> <span class="p">{</span><span class="c1">//helper function for user search</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="nx">query</span> <span class="o">===</span> <span class="kc">undefined</span> <span class="o">||</span> <span class="nx">query</span> <span class="o">===</span> <span class="kc">null</span> <span class="o">||</span> <span class="nx">query</span> <span class="o">===</span> <span class="s1">&#39;&#39;</span><span class="p">)</span> <span class="k">return</span> <span class="kc">true</span><span class="p">;</span>
</span><span class='line'>        <span class="nx">query</span> <span class="o">=</span> <span class="nx">query</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">();</span>
</span><span class='line'>        <span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;name&#39;</span><span class="p">).</span><span class="nx">toLowerCase</span><span class="p">().</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">query</span><span class="p">)</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span> <span class="o">||</span> <span class="k">this</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;email&#39;</span><span class="p">).</span><span class="nx">toLowerCase</span><span class="p">().</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">query</span><span class="p">)</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">Contacts</span> <span class="o">=</span> <span class="nx">Backbone</span><span class="p">.</span><span class="nx">Collection</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span>
</span><span class='line'>      <span class="nx">model</span><span class="o">:</span> <span class="nx">Contact</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">localStorage</span><span class="o">:</span> <span class="k">new</span> <span class="nx">Store</span><span class="p">(</span><span class="s1">&#39;my-contacts&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// contact item view</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">ContactItemView</span> <span class="o">=</span> <span class="nx">Backbone</span><span class="p">.</span><span class="nx">View</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span>
</span><span class='line'>      <span class="nx">className</span><span class="o">:</span> <span class="s1">&#39;item&#39;</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">template</span><span class="o">:</span> <span class="nx">_</span><span class="p">.</span><span class="nx">template</span><span class="p">(</span><span class="nx">$</span><span class="p">(</span><span class="s1">&#39;#tpl-item&#39;</span><span class="p">).</span><span class="nx">html</span><span class="p">()),</span>
</span><span class='line'>      <span class="nx">events</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s1">&#39;click&#39;</span><span class="o">:</span> <span class="s1">&#39;select&#39;</span>
</span><span class='line'>      <span class="p">},</span>
</span><span class='line'>      <span class="c1">// initialize</span>
</span><span class='line'>      <span class="nx">initialize</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">_</span><span class="p">.</span><span class="nx">bindAll</span><span class="p">(</span><span class="k">this</span><span class="p">,</span> <span class="s1">&#39;select&#39;</span><span class="p">);</span>
</span><span class='line'>        <span class="k">this</span><span class="p">.</span><span class="nx">model</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="s1">&#39;reset&#39;</span><span class="p">,</span> <span class="k">this</span><span class="p">.</span><span class="nx">render</span><span class="p">,</span> <span class="k">this</span><span class="p">);</span>
</span><span class='line'>        <span class="k">this</span><span class="p">.</span><span class="nx">model</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="s1">&#39;change&#39;</span><span class="p">,</span> <span class="k">this</span><span class="p">.</span><span class="nx">render</span><span class="p">,</span> <span class="k">this</span><span class="p">);</span>
</span><span class='line'>        <span class="k">this</span><span class="p">.</span><span class="nx">model</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="s1">&#39;destroy&#39;</span><span class="p">,</span> <span class="k">this</span><span class="p">.</span><span class="nx">remove</span><span class="p">,</span> <span class="k">this</span><span class="p">);</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">model</span><span class="p">.</span><span class="nx">view</span><span class="p">)</span> <span class="k">this</span><span class="p">.</span><span class="nx">model</span><span class="p">.</span><span class="nx">view</span><span class="p">.</span><span class="nx">remove</span><span class="p">();</span>
</span><span class='line'>        <span class="k">this</span><span class="p">.</span><span class="nx">model</span><span class="p">.</span><span class="nx">view</span> <span class="o">=</span> <span class="k">this</span><span class="p">;</span>
</span><span class='line'>      <span class="p">},</span>
</span><span class='line'>      <span class="c1">// render the contact item</span>
</span><span class='line'>      <span class="nx">render</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">this</span><span class="p">.</span><span class="nx">$el</span><span class="p">.</span><span class="nx">html</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">template</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">model</span><span class="p">.</span><span class="nx">toJSON</span><span class="p">()));</span>
</span><span class='line'>        <span class="k">return</span> <span class="k">this</span><span class="p">;</span>
</span><span class='line'>      <span class="p">},</span>
</span><span class='line'>      <span class="nx">select</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">appRouter</span><span class="p">.</span><span class="nx">navigate</span><span class="p">(</span><span class="s1">&#39;contacts/&#39;</span> <span class="o">+</span> <span class="k">this</span><span class="p">.</span><span class="nx">model</span><span class="p">.</span><span class="nx">cid</span><span class="p">,</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">trigger</span><span class="o">:</span> <span class="kc">true</span>
</span><span class='line'>        <span class="p">});</span>
</span><span class='line'>      <span class="p">},</span>
</span><span class='line'>      <span class="nx">active</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">this</span><span class="p">.</span><span class="nx">$el</span><span class="p">.</span><span class="nx">addClass</span><span class="p">(</span><span class="s1">&#39;active&#39;</span><span class="p">);</span>
</span><span class='line'>      <span class="p">},</span>
</span><span class='line'>      <span class="nx">deactive</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">this</span><span class="p">.</span><span class="nx">$el</span><span class="p">.</span><span class="nx">removeClass</span><span class="p">(</span><span class="s1">&#39;active&#39;</span><span class="p">);</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// sidebar view</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">SidebarView</span> <span class="o">=</span> <span class="nx">Backbone</span><span class="p">.</span><span class="nx">View</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span>
</span><span class='line'>      <span class="nx">className</span><span class="o">:</span> <span class="s1">&#39;sidebar&#39;</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">template</span><span class="o">:</span> <span class="nx">_</span><span class="p">.</span><span class="nx">template</span><span class="p">(</span><span class="nx">$</span><span class="p">(</span><span class="s1">&#39;#tpl-sidebar&#39;</span><span class="p">).</span><span class="nx">html</span><span class="p">()),</span>
</span><span class='line'>      <span class="nx">events</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s1">&#39;click footer button&#39;</span><span class="o">:</span> <span class="s1">&#39;create&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="s1">&#39;click input&#39;</span><span class="o">:</span> <span class="s1">&#39;filter&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="s1">&#39;keyup input&#39;</span><span class="o">:</span> <span class="s1">&#39;filter&#39;</span>
</span><span class='line'>      <span class="p">},</span>
</span><span class='line'>      <span class="c1">// initialize</span>
</span><span class='line'>      <span class="nx">initialize</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">_</span><span class="p">.</span><span class="nx">bindAll</span><span class="p">(</span><span class="k">this</span><span class="p">,</span> <span class="s1">&#39;create&#39;</span><span class="p">,</span> <span class="s1">&#39;filter&#39;</span><span class="p">);</span>
</span><span class='line'>        <span class="k">this</span><span class="p">.</span><span class="nx">model</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="s1">&#39;reset&#39;</span><span class="p">,</span> <span class="k">this</span><span class="p">.</span><span class="nx">renderAll</span><span class="p">,</span> <span class="k">this</span><span class="p">);</span>
</span><span class='line'>        <span class="k">this</span><span class="p">.</span><span class="nx">model</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="s1">&#39;add&#39;</span><span class="p">,</span> <span class="k">this</span><span class="p">.</span><span class="nx">add</span><span class="p">,</span> <span class="k">this</span><span class="p">);</span>
</span><span class='line'>        <span class="k">this</span><span class="p">.</span><span class="nx">model</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="s1">&#39;remove&#39;</span><span class="p">,</span> <span class="k">this</span><span class="p">.</span><span class="nx">remove</span><span class="p">,</span> <span class="k">this</span><span class="p">);</span>
</span><span class='line'>      <span class="p">},</span>
</span><span class='line'>      <span class="c1">// render the contact item</span>
</span><span class='line'>      <span class="nx">render</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">$</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">el</span><span class="p">).</span><span class="nx">html</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">template</span><span class="p">());</span>
</span><span class='line'>        <span class="k">this</span><span class="p">.</span><span class="nx">renderAll</span><span class="p">();</span>
</span><span class='line'>        <span class="k">return</span> <span class="k">this</span><span class="p">;</span>
</span><span class='line'>      <span class="p">},</span>
</span><span class='line'>      <span class="nx">renderAll</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">this</span><span class="p">.</span><span class="nx">$</span><span class="p">(</span><span class="s2">&quot;.items&quot;</span><span class="p">).</span><span class="nx">empty</span><span class="p">();</span>
</span><span class='line'>        <span class="k">this</span><span class="p">.</span><span class="nx">model</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">renderOne</span><span class="p">,</span> <span class="k">this</span><span class="p">);</span>
</span><span class='line'>        <span class="k">this</span><span class="p">.</span><span class="nx">filter</span><span class="p">();</span>
</span><span class='line'>      <span class="p">},</span>
</span><span class='line'>      <span class="nx">renderOne</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">contact</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="kd">var</span> <span class="nx">view</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">ContactItemView</span><span class="p">({</span>
</span><span class='line'>          <span class="nx">model</span><span class="o">:</span> <span class="nx">contact</span>
</span><span class='line'>        <span class="p">});</span>
</span><span class='line'>        <span class="k">this</span><span class="p">.</span><span class="nx">$</span><span class="p">(</span><span class="s2">&quot;.items&quot;</span><span class="p">).</span><span class="nx">append</span><span class="p">(</span><span class="nx">view</span><span class="p">.</span><span class="nx">render</span><span class="p">().</span><span class="nx">el</span><span class="p">);</span>
</span><span class='line'>      <span class="p">},</span>
</span><span class='line'>      <span class="nx">create</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="kd">var</span> <span class="nx">contact</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Contact</span><span class="p">();</span>
</span><span class='line'>        <span class="k">this</span><span class="p">.</span><span class="nx">model</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="nx">contact</span><span class="p">);</span>
</span><span class='line'>        <span class="nx">appRouter</span><span class="p">.</span><span class="nx">navigate</span><span class="p">(</span><span class="s1">&#39;contacts/&#39;</span> <span class="o">+</span> <span class="nx">contact</span><span class="p">.</span><span class="nx">cid</span> <span class="o">+</span> <span class="s1">&#39;/edit&#39;</span><span class="p">,</span> <span class="p">{</span>
</span><span class='line'>            <span class="nx">trigger</span><span class="o">:</span> <span class="kc">true</span>
</span><span class='line'>          <span class="p">});</span>
</span><span class='line'>      <span class="p">},</span>
</span><span class='line'>      <span class="nx">filter</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="kd">var</span> <span class="nx">query</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;input&#39;</span><span class="p">,</span> <span class="k">this</span><span class="p">.</span><span class="nx">el</span><span class="p">).</span><span class="nx">val</span><span class="p">();</span>
</span><span class='line'>        <span class="k">this</span><span class="p">.</span><span class="nx">model</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">contact</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">contact</span><span class="p">.</span><span class="nx">view</span><span class="p">.</span><span class="nx">$el</span><span class="p">.</span><span class="nx">toggle</span><span class="p">(</span><span class="nx">contact</span><span class="p">.</span><span class="nx">filter</span><span class="p">(</span><span class="nx">query</span><span class="p">));</span>
</span><span class='line'>        <span class="p">});</span>
</span><span class='line'>      <span class="p">},</span>
</span><span class='line'>      <span class="nx">active</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">item</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">activeItem</span><span class="p">)</span> <span class="k">this</span><span class="p">.</span><span class="nx">activeItem</span><span class="p">.</span><span class="nx">view</span><span class="p">.</span><span class="nx">deactive</span><span class="p">();</span>
</span><span class='line'>        <span class="k">this</span><span class="p">.</span><span class="nx">activeItem</span> <span class="o">=</span> <span class="nx">item</span><span class="p">;</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">activeItem</span><span class="p">)</span> <span class="k">this</span><span class="p">.</span><span class="nx">activeItem</span><span class="p">.</span><span class="nx">view</span><span class="p">.</span><span class="nx">active</span><span class="p">();</span>
</span><span class='line'>      <span class="p">},</span>
</span><span class='line'>      <span class="nx">add</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">contact</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">this</span><span class="p">.</span><span class="nx">renderOne</span><span class="p">(</span><span class="nx">contact</span><span class="p">);</span>
</span><span class='line'>      <span class="p">},</span>
</span><span class='line'>      <span class="nx">remove</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">contact</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">contact</span><span class="p">);</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'>    <span class="c1">// show selected contact details</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">ShowView</span> <span class="o">=</span> <span class="nx">Backbone</span><span class="p">.</span><span class="nx">View</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span>
</span><span class='line'>      <span class="nx">className</span><span class="o">:</span> <span class="s1">&#39;show&#39;</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">template</span><span class="o">:</span> <span class="nx">_</span><span class="p">.</span><span class="nx">template</span><span class="p">(</span><span class="nx">$</span><span class="p">(</span><span class="s1">&#39;#tpl-show&#39;</span><span class="p">).</span><span class="nx">html</span><span class="p">()),</span>
</span><span class='line'>      <span class="nx">events</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s1">&#39;click .edit&#39;</span><span class="o">:</span> <span class="s1">&#39;edit&#39;</span>
</span><span class='line'>      <span class="p">},</span>
</span><span class='line'>      <span class="nx">initialize</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">_</span><span class="p">.</span><span class="nx">bindAll</span><span class="p">(</span><span class="k">this</span><span class="p">,</span> <span class="s1">&#39;edit&#39;</span><span class="p">);</span>
</span><span class='line'>      <span class="p">},</span>
</span><span class='line'>      <span class="nx">render</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">item</span><span class="p">)</span> <span class="k">this</span><span class="p">.</span><span class="nx">$el</span><span class="p">.</span><span class="nx">html</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">template</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">item</span><span class="p">.</span><span class="nx">toJSON</span><span class="p">()));</span>
</span><span class='line'>        <span class="k">return</span> <span class="k">this</span><span class="p">;</span>
</span><span class='line'>      <span class="p">},</span>
</span><span class='line'>      <span class="nx">change</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">item</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">this</span><span class="p">.</span><span class="nx">item</span> <span class="o">=</span> <span class="nx">item</span><span class="p">;</span>
</span><span class='line'>        <span class="k">this</span><span class="p">.</span><span class="nx">render</span><span class="p">();</span>
</span><span class='line'>      <span class="p">},</span>
</span><span class='line'>      <span class="nx">edit</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">item</span><span class="p">)</span>
</span><span class='line'>          <span class="nx">appRouter</span><span class="p">.</span><span class="nx">navigate</span><span class="p">(</span><span class="s1">&#39;contacts/&#39;</span> <span class="o">+</span> <span class="k">this</span><span class="p">.</span><span class="nx">item</span><span class="p">.</span><span class="nx">cid</span> <span class="o">+</span> <span class="s1">&#39;/edit&#39;</span><span class="p">,</span> <span class="p">{</span>
</span><span class='line'>            <span class="nx">trigger</span><span class="o">:</span> <span class="kc">true</span>
</span><span class='line'>          <span class="p">});</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'>    <span class="c1">// edit selected contact</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">EditView</span> <span class="o">=</span> <span class="nx">Backbone</span><span class="p">.</span><span class="nx">View</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span>
</span><span class='line'>      <span class="nx">className</span><span class="o">:</span> <span class="s1">&#39;edit&#39;</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">template</span><span class="o">:</span> <span class="nx">_</span><span class="p">.</span><span class="nx">template</span><span class="p">(</span><span class="nx">$</span><span class="p">(</span><span class="s1">&#39;#tpl-edit&#39;</span><span class="p">).</span><span class="nx">html</span><span class="p">()),</span>
</span><span class='line'>      <span class="nx">events</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s1">&#39;submit form&#39;</span><span class="o">:</span> <span class="s1">&#39;submit&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="s1">&#39;click .save&#39;</span><span class="o">:</span> <span class="s1">&#39;submit&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="s1">&#39;click .delete&#39;</span><span class="o">:</span> <span class="s1">&#39;remove&#39;</span>
</span><span class='line'>      <span class="p">},</span>
</span><span class='line'>      <span class="nx">initialize</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">_</span><span class="p">.</span><span class="nx">bindAll</span><span class="p">(</span><span class="k">this</span><span class="p">,</span> <span class="s1">&#39;submit&#39;</span><span class="p">,</span> <span class="s1">&#39;remove&#39;</span><span class="p">);</span>
</span><span class='line'>      <span class="p">},</span>
</span><span class='line'>      <span class="nx">render</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">item</span><span class="p">)</span> <span class="k">this</span><span class="p">.</span><span class="nx">$el</span><span class="p">.</span><span class="nx">html</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">template</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">item</span><span class="p">.</span><span class="nx">toJSON</span><span class="p">()));</span>
</span><span class='line'>        <span class="k">return</span> <span class="k">this</span><span class="p">;</span>
</span><span class='line'>      <span class="p">},</span>
</span><span class='line'>      <span class="nx">change</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">item</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">this</span><span class="p">.</span><span class="nx">item</span> <span class="o">=</span> <span class="nx">item</span><span class="p">;</span>
</span><span class='line'>        <span class="k">this</span><span class="p">.</span><span class="nx">render</span><span class="p">();</span>
</span><span class='line'>      <span class="p">},</span>
</span><span class='line'>      <span class="nx">submit</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">this</span><span class="p">.</span><span class="nx">item</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">form</span><span class="p">());</span>
</span><span class='line'>        <span class="k">this</span><span class="p">.</span><span class="nx">item</span><span class="p">.</span><span class="nx">save</span><span class="p">();</span>
</span><span class='line'>        <span class="nx">appRouter</span><span class="p">.</span><span class="nx">navigate</span><span class="p">(</span><span class="s1">&#39;contacts/&#39;</span> <span class="o">+</span> <span class="k">this</span><span class="p">.</span><span class="nx">item</span><span class="p">.</span><span class="nx">cid</span><span class="p">,</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">trigger</span><span class="o">:</span> <span class="kc">true</span>
</span><span class='line'>        <span class="p">});</span>
</span><span class='line'>        <span class="k">return</span> <span class="kc">false</span><span class="p">;</span>
</span><span class='line'>      <span class="p">},</span>
</span><span class='line'>      <span class="nx">form</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">name</span><span class="o">:</span> <span class="k">this</span><span class="p">.</span><span class="nx">$</span><span class="p">(</span><span class="s1">&#39;form [name=&quot;name&quot;]&#39;</span><span class="p">).</span><span class="nx">val</span><span class="p">(),</span>
</span><span class='line'>          <span class="nx">email</span><span class="o">:</span> <span class="k">this</span><span class="p">.</span><span class="nx">$</span><span class="p">(</span><span class="s1">&#39;form [name=&quot;email&quot;]&#39;</span><span class="p">).</span><span class="nx">val</span><span class="p">()</span>
</span><span class='line'>        <span class="p">};</span>
</span><span class='line'>      <span class="p">},</span>
</span><span class='line'>      <span class="nx">remove</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">this</span><span class="p">.</span><span class="nx">item</span><span class="p">.</span><span class="nx">destroy</span><span class="p">();</span>
</span><span class='line'>        <span class="k">this</span><span class="p">.</span><span class="nx">item</span> <span class="o">=</span> <span class="kc">null</span><span class="p">;</span>
</span><span class='line'>        <span class="nx">appRouter</span><span class="p">.</span><span class="nx">navigate</span><span class="p">(</span><span class="s1">&#39;&#39;</span><span class="p">,</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">trigger</span><span class="o">:</span> <span class="kc">true</span>
</span><span class='line'>        <span class="p">});</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'>    <span class="c1">// main view for show and view</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">MainView</span> <span class="o">=</span> <span class="nx">Backbone</span><span class="p">.</span><span class="nx">View</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span>
</span><span class='line'>      <span class="nx">className</span><span class="o">:</span> <span class="s1">&#39;main stack&#39;</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">initialize</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">this</span><span class="p">.</span><span class="nx">editView</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">EditView</span><span class="p">();</span>
</span><span class='line'>        <span class="k">this</span><span class="p">.</span><span class="nx">showView</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">ShowView</span><span class="p">();</span>
</span><span class='line'>      <span class="p">},</span>
</span><span class='line'>      <span class="nx">render</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">this</span><span class="p">.</span><span class="nx">$el</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">showView</span><span class="p">.</span><span class="nx">render</span><span class="p">().</span><span class="nx">el</span><span class="p">);</span>
</span><span class='line'>        <span class="k">this</span><span class="p">.</span><span class="nx">$el</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">editView</span><span class="p">.</span><span class="nx">render</span><span class="p">().</span><span class="nx">el</span><span class="p">);</span>
</span><span class='line'>        <span class="k">return</span> <span class="k">this</span><span class="p">;</span>
</span><span class='line'>      <span class="p">},</span>
</span><span class='line'>      <span class="nx">edit</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">item</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">this</span><span class="p">.</span><span class="nx">showView</span><span class="p">.</span><span class="nx">$el</span><span class="p">.</span><span class="nx">removeClass</span><span class="p">(</span><span class="s1">&#39;active&#39;</span><span class="p">);</span>
</span><span class='line'>        <span class="k">this</span><span class="p">.</span><span class="nx">editView</span><span class="p">.</span><span class="nx">$el</span><span class="p">.</span><span class="nx">addClass</span><span class="p">(</span><span class="s1">&#39;active&#39;</span><span class="p">);</span>
</span><span class='line'>        <span class="k">this</span><span class="p">.</span><span class="nx">editView</span><span class="p">.</span><span class="nx">change</span><span class="p">(</span><span class="nx">item</span><span class="p">);</span>
</span><span class='line'>      <span class="p">},</span>
</span><span class='line'>      <span class="nx">show</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">item</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">this</span><span class="p">.</span><span class="nx">editView</span><span class="p">.</span><span class="nx">$el</span><span class="p">.</span><span class="nx">removeClass</span><span class="p">(</span><span class="s1">&#39;active&#39;</span><span class="p">);</span>
</span><span class='line'>        <span class="k">this</span><span class="p">.</span><span class="nx">showView</span><span class="p">.</span><span class="nx">$el</span><span class="p">.</span><span class="nx">addClass</span><span class="p">(</span><span class="s1">&#39;active&#39;</span><span class="p">);</span>
</span><span class='line'>        <span class="k">this</span><span class="p">.</span><span class="nx">showView</span><span class="p">.</span><span class="nx">change</span><span class="p">(</span><span class="nx">item</span><span class="p">);</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">AppView</span> <span class="o">=</span> <span class="nx">Backbone</span><span class="p">.</span><span class="nx">View</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span>
</span><span class='line'>      <span class="nx">className</span><span class="o">:</span> <span class="s1">&#39;contacts&#39;</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">initialize</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">this</span><span class="p">.</span><span class="nx">sidebar</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">SidebarView</span><span class="p">({</span>
</span><span class='line'>          <span class="nx">model</span><span class="o">:</span> <span class="k">this</span><span class="p">.</span><span class="nx">model</span>
</span><span class='line'>        <span class="p">});</span>
</span><span class='line'>        <span class="k">this</span><span class="p">.</span><span class="nx">main</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">MainView</span><span class="p">();</span>
</span><span class='line'>        <span class="k">this</span><span class="p">.</span><span class="nx">vdiv</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;&lt;div /&gt;&#39;</span><span class="p">).</span><span class="nx">addClass</span><span class="p">(</span><span class="s1">&#39;vdivide&#39;</span><span class="p">);</span>
</span><span class='line'>        <span class="k">this</span><span class="p">.</span><span class="nx">model</span><span class="p">.</span><span class="nx">fetch</span><span class="p">();</span>
</span><span class='line'>        <span class="k">this</span><span class="p">.</span><span class="nx">render</span><span class="p">();</span>
</span><span class='line'>      <span class="p">},</span>
</span><span class='line'>      <span class="nx">render</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">this</span><span class="p">.</span><span class="nx">$el</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">sidebar</span><span class="p">.</span><span class="nx">render</span><span class="p">().</span><span class="nx">el</span><span class="p">);</span>
</span><span class='line'>        <span class="k">this</span><span class="p">.</span><span class="nx">$el</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">vdiv</span><span class="p">);</span>
</span><span class='line'>        <span class="k">this</span><span class="p">.</span><span class="nx">$el</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">main</span><span class="p">.</span><span class="nx">render</span><span class="p">().</span><span class="nx">el</span><span class="p">);</span>
</span><span class='line'>        <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;#article&#39;</span><span class="p">).</span><span class="nx">append</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">el</span><span class="p">);</span>
</span><span class='line'>        <span class="k">return</span> <span class="k">this</span><span class="p">;</span>
</span><span class='line'>      <span class="p">},</span>
</span><span class='line'>      <span class="nx">show</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">item</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">this</span><span class="p">.</span><span class="nx">sidebar</span><span class="p">.</span><span class="nx">active</span><span class="p">(</span><span class="nx">item</span><span class="p">);</span>
</span><span class='line'>        <span class="k">this</span><span class="p">.</span><span class="nx">main</span><span class="p">.</span><span class="nx">show</span><span class="p">(</span><span class="nx">item</span><span class="p">);</span>
</span><span class='line'>      <span class="p">},</span>
</span><span class='line'>      <span class="nx">edit</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">item</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">this</span><span class="p">.</span><span class="nx">sidebar</span><span class="p">.</span><span class="nx">active</span><span class="p">(</span><span class="nx">item</span><span class="p">);</span>
</span><span class='line'>        <span class="k">this</span><span class="p">.</span><span class="nx">main</span><span class="p">.</span><span class="nx">edit</span><span class="p">(</span><span class="nx">item</span><span class="p">);</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">//Router</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">AppRouter</span> <span class="o">=</span> <span class="nx">Backbone</span><span class="p">.</span><span class="nx">Router</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span>
</span><span class='line'>      <span class="nx">routes</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s1">&#39;&#39;</span><span class="o">:</span> <span class="s1">&#39;show&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="s1">&#39;contacts/:id&#39;</span><span class="o">:</span> <span class="s1">&#39;show&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="s1">&#39;contacts/:id/edit&#39;</span><span class="o">:</span> <span class="s1">&#39;edit&#39;</span>
</span><span class='line'>      <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>      <span class="nx">show</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">id</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">appView</span><span class="p">.</span><span class="nx">show</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">getContact</span><span class="p">(</span><span class="nx">id</span><span class="p">));</span>
</span><span class='line'>      <span class="p">},</span>
</span><span class='line'>      <span class="nx">edit</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">id</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">appView</span><span class="p">.</span><span class="nx">edit</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">getContact</span><span class="p">(</span><span class="nx">id</span><span class="p">));</span>
</span><span class='line'>      <span class="p">},</span>
</span><span class='line'>      <span class="nx">getContact</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">id</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="nx">contacts</span><span class="p">.</span><span class="nx">getByCid</span><span class="p">(</span><span class="nx">id</span><span class="p">);</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">contacts</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Contacts</span><span class="p">();</span>
</span><span class='line'>    <span class="nb">window</span><span class="p">.</span><span class="nx">appView</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">AppView</span><span class="p">({</span><span class="nx">model</span><span class="o">:</span> <span class="nx">contacts</span><span class="p">});</span>
</span><span class='line'>    <span class="nb">window</span><span class="p">.</span><span class="nx">appRouter</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">AppRouter</span><span class="p">();</span>
</span><span class='line'>    <span class="nx">Backbone</span><span class="p">.</span><span class="nx">history</span><span class="p">.</span><span class="nx">start</span><span class="p">();</span>
</span><span class='line'>  <span class="p">});</span>
</span><span class='line'><span class="p">})(</span><span class="nx">jQuery</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>参考资料：</p>

<ul>
<li><a href="http://arturadib.com/hello-backbonejs/">hello-backbonejs</a>，step by step的入门教程；</li>
<li><a href="http://backbonetutorials.com/">backbonetutorials</a>，比较基础的教程；</li>
<li><a href="http://addyosmani.github.com/backbone-fundamentals/">backbone-fundamentals</a>，有时间就多看看这个吧，比较深入，同时也提供了很多例子讲如何与Ruby，<a href="http://nodejs.org/">Node.js</a>配合使用；</li>
<li><a href="http://backbonejs.com/" title="Backbone.js">Backbone</a>官网，一切资料的根本；</li>
</ul>

]]></content>
  </entry>
  
</feed>
